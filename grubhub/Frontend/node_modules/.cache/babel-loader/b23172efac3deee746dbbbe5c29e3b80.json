{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/UpdateMenu/UpdateMenu.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport './UpdateMenu.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getProfile } from '../../actions';\nimport { loginuser } from '../../actions';\nimport { updaterestaurantmenu } from '../../actions';\nimport { menudetails } from '../../actions';\nimport { getUserImage } from '../../actions';\nimport { connect } from 'react-redux';\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav';\nimport { Field, reduxForm } from 'redux-form'; // Define a Login Component\n\nclass Menu extends Component {\n  // call the constructor method\n  constructor(props) {\n    super(props);\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = formValues => {\n      // let val = JSON.parse(sessionStorage.getItem('ownerdata'))\n      let menuid = sessionStorage.getItem('menuid'); // console.log('temp : ' +val.email)\n\n      let data = {\n        dishname: formValues.dishname,\n        description: formValues.description,\n        price: formValues.baseprice,\n        section: formValues.section,\n        id: menuid\n      };\n      axios.defaults.withCredentials = true;\n      this.props.updaterestaurantmenu(data, res => {\n        if (res.status === 200) {\n          console.log('Inside response', res.data[0]);\n          this.setState({\n            authFlag: true\n          });\n          this.props.history.push('/ownerrestaurantmenu');\n        } else {\n          alert('Please enter valid credentials');\n        }\n      }); // ,(response)=>{ //   console.log('Redux test: ' + this.props.user); //   console.log('Redux response: ' + response); // }) // console.log(data); // this.props.login(data, (response)=>{ //   console.log('Redux test: ' + this.props.user) //   this.setState({ //     img: 'data:image/png;base64, ' + response.image //   }) // });\n    };\n\n    this.uploadImage = e => {\n      e.preventDefault();\n      console.log(\"hi\");\n      const formData = new FormData();\n      let menuid = sessionStorage.getItem('menuid');\n      console.log(menuid);\n      console.log(this.state.file); // formData.append('myImage', this.state.file, menuid)\n      // const config = {\n      //     headers: {\n      //         'content-type': 'multipart/form-data'\n      //     }\n      // }\n      // axios\n      //     .post('/updatemenu', formData, config)\n      //     .then(response => {\n      //         let data = { 'menuid': menuid }\n      //         axios.post('http://localhost:3001/menuimage', data).then(response => {\n      //             console.log('Axios get:', response.data)\n      //             this.setState({\n      //                 img: 'data:image/png;base64, ' + response.data\n      //             })\n      //         })\n      //     })\n      //     .catch(error => { })\n    };\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      text,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        htmlFor: \"email\",\n        style: {\n          color: '#6b6b83'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, label, \":  \", text), React.createElement(\"input\", Object.assign({\n        className: \"form-control\" // style={{ marginRight: '10px' }}\n\n      }, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.state = {\n      authFlag: false,\n      details: '',\n      selectedFile: null,\n      img: ''\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n    let data = sessionStorage.getItem('menuid'); // alert(temp)\n\n    this.props.menudetails({\n      params: {\n        id: data\n      }\n    }, response => {\n      // console.log( this.props.user[1])\n      console.log(response.data); // console.log(this.props.details)\n\n      this.setState({\n        details: response.data\n      });\n    });\n    axios.post('http://localhost:3001/menuimage', data).then(response => {\n      // console.log('Axios get:', response.data)\n      this.setState({\n        img: 'temp:image/png;base64, ' + response.data\n      });\n    });\n  }\n\n  render() {\n    // redirect based on successful login\n    // let redirectVar = null\n    let invalidtag = null; // if (!cookie.load('cookie')) {\n    //   redirectVar = <Redirect to='/login' />\n    // }\n\n    console.log(this.props.owner);\n    let redirectVar = null;\n\n    if (sessionStorage.getItem('JWT' === null)) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"*Invalid\\xA0user\\xA0name\\xA0password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        className: \"btn\\xA0btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0Update\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(DisplayOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.uploadImage,\n      enctype: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.img,\n      width: \"200\",\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.imageChangeHandler,\n      name: \"myImage\",\n      id: \"myImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), updatePic)), React.createElement(\"form\", {\n      className: \"ui\\xA0form\\xA0error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, \"Edit menu\"), React.createElement(\"div\", {\n      style: {\n        marginRight: '20px'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Field, {\n      class: \"form-control\",\n      name: \"dishname\",\n      component: this.renderInput,\n      label: \" Name\",\n      text: this.props.owner.dish_name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginRight: '20px'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"description\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Description\",\n      text: this.props.owner.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      style: {\n        marginRight: '20px'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"section\",\n      component: this.renderInput,\n      label: \"Menu Section\",\n      text: this.props.owner.section,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        marginRight: '20px'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"baseprice\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Base Price\",\n      text: this.props.owner.price,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"id\",\n      type: \"id\",\n      component: this.renderInput,\n      label: \"menuid \",\n      text: this.props.owner._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, \"Edit Menu\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })))))))))));\n  }\n\n} // export Login Component\n// export default BuyerProfile\n\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.dishname) {\n    error.dishname = 'Enter a valid dish name';\n  }\n\n  if (!formValues.description) {\n    error.description = 'Enter a valid description';\n  }\n\n  if (!formValues.baseprice) {\n    error.baseprice = 'Enter a valid baseprice';\n  }\n\n  if (!formValues.section) {\n    error.section = 'Enter a valid section';\n  }\n\n  return error;\n};\n\nconst mapStateToProps = state => {\n  return {\n    owner: state.owner\n  };\n};\n\nexport default connect(mapStateToProps, {\n  updaterestaurantmenu,\n  menudetails\n})(reduxForm({\n  form: 'streamUpdateMenu',\n  validate: validate\n})(Menu));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/UpdateMenu/UpdateMenu.js"],"names":["React","Component","axios","cookie","Redirect","Link","getProfile","loginuser","updaterestaurantmenu","menudetails","getUserImage","connect","DisplayOwnerNav","Field","reduxForm","Menu","constructor","props","inputChangeHandler","e","setState","target","name","value","onSubmit","formValues","menuid","sessionStorage","getItem","data","dishname","description","price","baseprice","section","id","defaults","withCredentials","res","status","console","log","authFlag","history","push","alert","uploadImage","preventDefault","formData","FormData","state","file","renderError","error","touched","color","renderInput","input","label","text","meta","details","selectedFile","img","componentWillMount","params","response","post","then","render","invalidtag","owner","redirectVar","authFailed","updatePic","imageChangeHandler","handleSubmit","marginRight","dish_name","_id","validate","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../../App.css'\nimport './UpdateMenu.css'\nimport axios from 'axios'\nimport cookie from 'react-cookies'\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { getProfile } from '../../actions'\nimport { loginuser } from '../../actions'\nimport { updaterestaurantmenu } from '../../actions'\nimport { menudetails } from '../../actions'\n\nimport { getUserImage } from '../../actions'\nimport { connect } from 'react-redux'\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav'\nimport { Field, reduxForm } from 'redux-form'\n\n// Define a Login Component\nclass Menu extends Component {\n  // call the constructor method\n  constructor (props) {\n    super(props)\n    this.state = {\n      authFlag: false,\n      details: '',\n      selectedFile: null,\n      img : ''\n    }\n  }\n\n  componentWillMount () {\n    this.setState({\n      authFlag: false\n    })\n    let data = sessionStorage.getItem('menuid')\n    // alert(temp)\n    this.props.menudetails({ params: {id: data} }, response => {\n      // console.log( this.props.user[1])\n      console.log(response.data)\n      // console.log(this.props.details)\n      this.setState({\n        details: response.data\n      })\n      \n    })\n\n    axios.post('http://localhost:3001/menuimage', data).then(response => {\n                    // console.log('Axios get:', response.data)\n                    this.setState({\n                        img: 'temp:image/png;base64, ' + response.data\n\n                    })\n                })\n    \n  }\n\n\n  inputChangeHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  onSubmit = formValues => {\n    // let val = JSON.parse(sessionStorage.getItem('ownerdata'))\n    let menuid = sessionStorage.getItem('menuid')\n    // console.log('temp : ' +val.email)\n    let data = {\n      dishname: formValues.dishname,\n      description: formValues.description,\n      price: formValues.baseprice,\n      section: formValues.section,\n      id: menuid\n    }\n    axios.defaults.withCredentials = true\n\n    this.props.updaterestaurantmenu(data, res => {\n      if (res.status === 200) {\n        console.log('Inside response', res.data[0])\n        this.setState({\n          authFlag: true\n        })\n\n        this.props.history.push('/ownerrestaurantmenu')\n      } else {\n        alert('Please enter valid credentials')\n      }\n    }) // ,(response)=>{ //   console.log('Redux test: ' + this.props.user); //   console.log('Redux response: ' + response); // }) // console.log(data); // this.props.login(data, (response)=>{ //   console.log('Redux test: ' + this.props.user) //   this.setState({ //     img: 'data:image/png;base64, ' + response.image //   }) // });\n  \n  }\n\n  uploadImage = e => {\n    e.preventDefault()\n    console.log(\"hi\")\n    const formData = new FormData()\n\n    let menuid = sessionStorage.getItem('menuid');\n    console.log(menuid);\n    console.log(this.state.file);\n    // formData.append('myImage', this.state.file, menuid)\n    \n    // const config = {\n    //     headers: {\n    //         'content-type': 'multipart/form-data'\n    //     }\n    // }\n    // axios\n    //     .post('/updatemenu', formData, config)\n    //     .then(response => {\n    //         let data = { 'menuid': menuid }\n    //         axios.post('http://localhost:3001/menuimage', data).then(response => {\n    //             console.log('Axios get:', response.data)\n    //             this.setState({\n    //                 img: 'data:image/png;base64, ' + response.data\n    //             })\n    //         })\n            \n    //     })\n    //     .catch(error => { })\n}\n  \n\n\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div>\n          <label style={{ color: 'red' }}>{error}</label>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, text, meta}) => {\n    return (\n      <div>\n        <div htmlFor='email' style={{ color: '#6b6b83' }}>\n          {label}:  {text}\n        </div>\n        <input\n          className='form-control'\n          // style={{ marginRight: '10px' }}\n          {...input}\n        />\n        {this.renderError(meta)}\n      </div>\n    )\n  }\n\n  render () {\n    // redirect based on successful login\n    // let redirectVar = null\n    let invalidtag = null\n    // if (!cookie.load('cookie')) {\n    //   redirectVar = <Redirect to='/login' />\n    // }\n\n    console.log(this.props.owner)\n\n    let redirectVar  = null\n    if (sessionStorage.getItem('JWT' === null)){ \n      redirectVar  = <Redirect to='/login'/>\n    }\n\n\n    if (this.state.authFailed) {\n      invalidtag = (\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\n      )\n    }\n    let updatePic = null\n\n    if (this.state.file !== '') {\n      updatePic = (\n        <button\n          className='btn btn-link'\n          type='submit'\n        >\n                    Update\n        </button>\n      )\n    }\n\n    return (\n      <div>\n        {redirectVar}\n        <div className='row'>\n          <div className='col-sm-2'>\n            <DisplayOwnerNav />\n          </div>\n\n          <div className='col-sm-10'>\n            <div class='container'>\n              <div class='login-form'>\n                {/* <div class='main-div'> */}\n\n                <div className='row'>\n                  <div className='col-sm-6'>\n\n                  <form onSubmit={this.uploadImage} enctype='multipart/form-data'>\n                <div>\n                  <img\n                    src={this.state.img}\n                    width='200'\n                    height='200'\n                  />\n                  <input\n                    type='file'\n                    onChange={this.imageChangeHandler}\n                    name='myImage'\n                    id='myImage'\n                  />\n                  <br />\n                  {updatePic}\n                </div>\n              </form>\n\n                    <form\n                      className='ui form error'\n                      onSubmit={this.props.handleSubmit(this.onSubmit)}\n                    >\n                      <ul class='list-group'>\n                        <li class='list-group-item'>\n                          <br />\n                          <h2>Edit menu</h2>\n                          <div\n                            style={{ marginRight: '20px' }}\n                            class='form-group'\n                          >\n                            <Field\n                              class='form-control'\n                              name='dishname'\n                              component={this.renderInput}\n                              label=' Name'\n                              text= {this.props.owner.dish_name}\n                            />\n                          </div>\n                          <div\n                            style={{ marginRight: '20px' }}\n                            class='form-group'\n                          >\n                            <Field\n                              name='description'\n                              type='text'\n                              component={this.renderInput}\n                              label='Description'\n                              text= {this.props.owner.description}\n                            />\n                          </div>\n\n                          <div\n                            style={{ marginRight: '20px' }}\n                            class='form-group'\n                          >\n                            <Field\n                              name='section'\n                              component={this.renderInput}\n                              label='Menu Section'\n                              text= {this.props.owner.section}\n                            />\n                          </div>\n                          <br />\n                          <div\n                            style={{ marginRight: '20px' }}\n                            class='form-group'\n                          >\n                            <Field\n                              name='baseprice'\n                              type='text'\n                              component={this.renderInput}\n                              label='Base Price'\n                              text= {this.props.owner.price}\n                            />\n                          </div>\n                          <Field\n                              name='id'\n                              type='id'\n                              component={this.renderInput}\n                              label='menuid '\n                              text= {this.props.owner._id}\n                            />\n                          <br />\n                          <button type='submit' class='btn btn-info'>\n                            Edit Menu\n                          </button>\n                          <br />\n                        </li>\n                      </ul>\n                    </form>\n                  </div>\n                  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n// export Login Component\n// export default BuyerProfile\n\nconst validate = formValues => {\n  const error = {}\n  if (!formValues.dishname) {\n    error.dishname = 'Enter a valid dish name'\n  }\n  if (!formValues.description) {\n    error.description = 'Enter a valid description'\n  }\n  if (!formValues.baseprice) {\n    error.baseprice = 'Enter a valid baseprice'\n  }\n  if (!formValues.section) {\n    error.section = 'Enter a valid section'\n  }\n  return error\n}\n\nconst mapStateToProps = state => {\n  return { owner: state.owner }\n}\n\nexport default connect(\n  mapStateToProps,\n  { updaterestaurantmenu, menudetails }\n)(\n  reduxForm({\n    form: 'streamUpdateMenu',\n    validate: validate\n  })(Menu)\n)\n\n"]},"metadata":{},"sourceType":"module"}