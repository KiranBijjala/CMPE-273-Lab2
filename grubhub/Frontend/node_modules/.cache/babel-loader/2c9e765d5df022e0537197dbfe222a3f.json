{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Redux Grubhub Final/Frontend/src/components/Existingusersignin.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { loginuser } from '../actions';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'; // Define a Login Component\n\nclass Existingusersignin extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        htmlFor: \"email\",\n        style: {\n          color: '#6b6b83'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, label), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        class: \"form-control\"\n      }, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), this.renderError(meta)));\n    };\n\n    this.onSubmit = formValues => {\n      console.log('OnSubmit' + formValues);\n      let data = {\n        email: formValues.email,\n        password: formValues.password\n      };\n      axios.defaults.withCredentials = true;\n      this.props.loginuser(data, response => {\n        if (response.status === 200) {\n          console.log(response.data);\n          this.setState({\n            authFlag: true\n          });\n          sessionStorage.setItem('email', res.data.email); // sessionStorage.setItem('username', res.data.username)\n          // sessionStorage.setItem('cookie', res.data.type)\n          // cookies.save('cookie', res.data[0].type, {maxAge: 900000, httpOnly: false, path: '/'});\n          // cookies.save('userid', res.data[0]._id, {maxAge: 900000, httpOnly: false, path: '/'});\n          // cookies.save('username', res.data[0].username, {maxAge: 900000, httpOnly: false, path: '/'});\n\n          this.props.history.push(\"/search\");\n        } else {\n          alert('Please enter valid credentials');\n        }\n      });\n    };\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.submitLogin = e => {\n      var headers = new Headers();\n      console.log('submit login'); // prevent page from refresh\n\n      e.preventDefault();\n      const data = {\n        email: this.state.email,\n        password: this.state.password\n      }; // set the with credentials to true\n\n      axios.defaults.withCredentials = true;\n      console.log(data); // make a post request with the user data\n\n      axios.post('http://localhost:3001/login', data).then(response => {\n        console.log('Status Code : ', response.status);\n\n        if (response.status === 200) {\n          sessionStorage.setItem('email', data.email);\n          this.setState({\n            authFlag: true\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          authFailed: true\n        });\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      authFlag: false,\n      authFailed: false\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false,\n      authFailed: false\n    });\n  }\n\n  render() {\n    console.log(this.props.user); // redirect based on successful login\n    // console.log(this.props)\n    // renderInput(formProps){\n    //   return (<input onChange={...formProps.input.onChange} value={...formProps.input.value} />)\n    // }\n\n    let redirectVar = null;\n    let invalidtag = null;\n\n    if (!cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      });\n    }\n\n    let redirecthome = null;\n\n    if (this.state.authFlag) {\n      redirecthome = React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"*Invalid user name password!\");\n    }\n\n    return React.createElement(\"form\", {\n      className: \"ui form error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, redirectVar, redirecthome, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"main-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Sign in with your Grubhub account\"), invalidtag), React.createElement(Field, {\n      name: \"email\",\n      component: this.renderInput,\n      label: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      component: this.renderInput,\n      label: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Login\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"or\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn btn-secondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"Continue with Facebook\")), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      class: \"btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Continue with Google\")), React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"Create an account\")))))));\n  }\n\n}\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.email) {\n    error.email = 'Enter a valid email';\n  }\n\n  if (!formValues.password) {\n    error.password = 'Enter a valid Password';\n  }\n\n  return error;\n}; // export default connect(null,{loginuser:loginuser})(formWrapped)\n\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginuser\n})(reduxForm({\n  form: 'streamLogin',\n  validate: validate\n})(Existingusersignin));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Redux Grubhub Final/Frontend/src/components/Existingusersignin.js"],"names":["React","Component","axios","cookie","Redirect","Link","loginuser","Field","reduxForm","connect","Existingusersignin","constructor","props","renderError","error","touched","color","renderInput","input","label","meta","onSubmit","formValues","console","log","data","email","password","defaults","withCredentials","response","status","setState","authFlag","sessionStorage","setItem","res","history","push","alert","inputChangeHandler","e","target","name","value","submitLogin","headers","Headers","preventDefault","state","post","then","catch","err","authFailed","componentWillMount","render","user","redirectVar","invalidtag","load","redirecthome","handleSubmit","textAlign","validate","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../App.css'\nimport axios from 'axios'\nimport cookie from 'react-cookies'\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { loginuser } from '../actions'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\n// Define a Login Component\nclass Existingusersignin extends Component {\n  // call the constructor method\n  constructor (props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props)\n    // maintain the state required for this component\n    this.state = {\n      email: '',\n      password: '',\n      authFlag: false,\n      authFailed: false\n    }\n\n  }\n  \n  componentWillMount () {\n    this.setState({\n      authFlag: false,\n      authFailed: false\n    })\n  }\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div>\n          <label style={{ color: 'red' }}>{error}</label>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    return (\n      <div>\n        <div htmlFor='email' style={{ color: '#6b6b83' }}>\n          {label}\n        </div>\n        <div class='form-group'>\n        <input class='form-control' {...input} />\n        {this.renderError(meta)}\n        </div>\n      </div>\n    )\n  }\n\n  onSubmit = formValues => {\n    console.log('OnSubmit' + formValues)\n    let data = {\n      email: formValues.email,\n      password: formValues.password\n    }\n    axios.defaults.withCredentials = true\n    this.props.loginuser(data, response => {\n      if (response.status === 200) {\n        console.log(response.data);\n        this.setState({\n          authFlag:true\n        })\n        sessionStorage.setItem('email', res.data.email)\n        // sessionStorage.setItem('username', res.data.username)\n        // sessionStorage.setItem('cookie', res.data.type)\n        // cookies.save('cookie', res.data[0].type, {maxAge: 900000, httpOnly: false, path: '/'});\n        // cookies.save('userid', res.data[0]._id, {maxAge: 900000, httpOnly: false, path: '/'});\n        // cookies.save('username', res.data[0].username, {maxAge: 900000, httpOnly: false, path: '/'});\n        this.props.history.push(\"/search\");\n      } else {\n        alert('Please enter valid credentials')\n      }\n    })\n\n  }\n\n  inputChangeHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n  // submit Login handler to send a request to the node backend\n  submitLogin = e => {\n    var headers = new Headers()\n    console.log('submit login')\n    // prevent page from refresh\n    e.preventDefault()\n    const data = {\n      email: this.state.email,\n      password: this.state.password\n    }\n    // set the with credentials to true\n    axios.defaults.withCredentials = true\n    console.log(data)\n    // make a post request with the user data\n    axios\n      .post('http://localhost:3001/login', data)\n      .then(response => {\n        console.log('Status Code : ', response.status)\n        if (response.status === 200) {\n          sessionStorage.setItem('email', data.email)\n          this.setState({\n            authFlag: true\n          })\n        }\n      })\n      .catch(err => {\n        this.setState({ authFailed: true })\n      })\n  }\n\n  render () {\n    console.log(this.props.user)\n    // redirect based on successful login\n    // console.log(this.props)\n\n    // renderInput(formProps){\n    //   return (<input onChange={...formProps.input.onChange} value={...formProps.input.value} />)\n    // }\n\n    let redirectVar = null\n    let invalidtag = null\n    if (!cookie.load('cookie')) {\n      redirectVar = <Redirect to='/login' />\n    }\n    let redirecthome = null\n    if (this.state.authFlag) {\n      redirecthome = <Redirect to='/home' />\n    }\n    if (this.state.authFailed) {\n      invalidtag = (\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\n      )\n    }\n\n    return (\n      <form\n        className='ui form error'\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\n      >\n        <div>\n          {redirectVar}\n          {redirecthome}\n          <div class='container'>\n            <div class='login-form'>\n              <div class='main-div'>\n                <div class='panel'>\n                  <h2>Sign in with your Grubhub account</h2>\n                  {invalidtag}\n                </div>\n                <Field\n                  name='email'\n                  component={this.renderInput}\n                  label='Email'\n                />\n                <br />\n                <Field\n                  name='password'\n                  type='password'\n                  component={this.renderInput}\n                  label='Password'\n                />\n                <br />\n                <button type='submit' class='btn btn-primary'>\n                  Login\n                </button>\n                <br />\n                \n                <div class='form-group'>\n                  <div style={{ textAlign: 'center' }}>or</div>\n                </div>\n                <div class='form-group'>\n                  <button class='btn btn-secondary'>\n                    Continue with Facebook\n                  </button>\n                </div>\n\n                <div class='form-group'>\n                  <button class='btn btn-info'>Continue with Google</button>\n                </div>\n\n                <div style={{ textAlign: 'center' }} class='form-group'>\n                  <Link to='/signup'>Create an account</Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    )\n  }\n}\n\nconst validate = formValues => {\n  const error = {}\n  if (!formValues.email) {\n    error.email = 'Enter a valid email'\n  }\n  if (!formValues.password) {\n    error.password = 'Enter a valid Password'\n  }\n  return error\n}\n\n\n// export default connect(null,{loginuser:loginuser})(formWrapped)\nconst mapStateToProps = state => {\n  return { user: state.user }\n}\n\nexport default connect(\n  mapStateToProps,\n  { loginuser }\n)(\n  reduxForm({\n    form: 'streamLogin',\n    validate: validate\n  })(Existingusersignin)\n)\n\n"]},"metadata":{},"sourceType":"module"}