{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Downloads/CMPE 273/Snippets/React Demo/Frontend/src/components/Login/Login.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router'; //Define a Login Component\n\nclass Login extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constrictor of Super class i.e The Component\n    super(props); //maintain the state required for this component\n\n    this.usernameChangeHandler = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.passwordChangeHandler = e => {\n      this.setState({\n        password: e.target.value\n      });\n    };\n\n    this.submitLogin = e => {\n      var headers = new Headers(); //prevent page from refresh\n\n      e.preventDefault();\n      const data = {\n        username: this.state.username,\n        password: this.state.password\n      }; //set the with credentials to true\n\n      axios.defaults.withCredentials = true; //make a post request with the user data\n\n      axios.post('http://localhost:3001/login', data).then(response => {\n        console.log(\"Status Code : \", response.status);\n\n        if (response.status === 200) {\n          this.setState({\n            authFlag: true\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          failuser: true\n        });\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      authFlag: false,\n      failuser: false\n    }; //Bind the handlers to this class\n\n    this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\n    this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\n    this.submitLogin = this.submitLogin.bind(this);\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false\n    });\n  } //username change handler to update state variable with the text entered by the user\n\n\n  render() {\n    //redirect based on successful login\n    let redirectVar = null;\n\n    if (cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      });\n    }\n\n    let faillabel = null;\n\n    if (this.state.failuser) {\n      faillabel = React.createElement(\"label\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Please check Username and password \");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"main-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Admin Login\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Please enter your username and password\")), faillabel, React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.usernameChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      name: \"username\",\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.passwordChangeHandler,\n      type: \"password\",\n      class: \"form-control\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.submitLogin,\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Login\")))));\n  }\n\n} //export Login Component\n\n\nexport default Login;","map":{"version":3,"sources":["/Users/kirankumarbijjala/Downloads/CMPE 273/Snippets/React Demo/Frontend/src/components/Login/Login.js"],"names":["React","Component","axios","cookie","Redirect","Login","constructor","props","usernameChangeHandler","e","setState","username","target","value","passwordChangeHandler","password","submitLogin","headers","Headers","preventDefault","data","state","defaults","withCredentials","post","then","response","console","log","status","authFlag","catch","err","failuser","bind","componentWillMount","render","redirectVar","load","faillabel","color"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport '../../App.css';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies';\r\nimport {Redirect} from 'react-router';\r\n\r\n//Define a Login Component\r\nclass Login extends Component{\r\n    //call the constructor method\r\n    constructor(props){\r\n        //Call the constrictor of Super class i.e The Component\r\n        super(props);\r\n        //maintain the state required for this component\r\n        this.state = {\r\n            username : \"\",\r\n            password : \"\",\r\n            authFlag : false,\r\n            failuser: false\r\n        }\r\n        //Bind the handlers to this class\r\n        this.usernameChangeHandler = this.usernameChangeHandler.bind(this);\r\n        this.passwordChangeHandler = this.passwordChangeHandler.bind(this);\r\n        this.submitLogin = this.submitLogin.bind(this);\r\n    }\r\n    //Call the Will Mount to set the auth Flag to false\r\n    componentWillMount(){\r\n        this.setState({\r\n            authFlag : false\r\n        })\r\n    }\r\n    //username change handler to update state variable with the text entered by the user\r\n    usernameChangeHandler = (e) => {\r\n        this.setState({\r\n            username : e.target.value\r\n        })\r\n    }\r\n    //password change handler to update state variable with the text entered by the user\r\n    passwordChangeHandler = (e) => {\r\n        this.setState({\r\n            password : e.target.value\r\n        })\r\n    }\r\n    //submit Login handler to send a request to the node backend\r\n    submitLogin = (e) => {\r\n        var headers = new Headers();\r\n        //prevent page from refresh\r\n        e.preventDefault();\r\n        const data = {\r\n            username : this.state.username,\r\n            password : this.state.password\r\n        }\r\n        //set the with credentials to true\r\n        axios.defaults.withCredentials = true;\r\n        //make a post request with the user data\r\n        axios.post('http://localhost:3001/login',data)\r\n            .then(response => {\r\n                console.log(\"Status Code : \",response.status);\r\n                if(response.status === 200){\r\n                    this.setState({\r\n                        authFlag : true\r\n                    })\r\n                }\r\n            }).catch(err=>{\r\n                this.setState({failuser : true})\r\n            })\r\n    }\r\n\r\n    render(){\r\n        //redirect based on successful login\r\n        let redirectVar = null;\r\n        if(cookie.load('cookie')){\r\n            redirectVar = <Redirect to= \"/home\"/>\r\n        }\r\n        let faillabel = null;\r\n        if(this.state.failuser){\r\n            faillabel = (\r\n            <label style = {{color : \"red\"}}>Please check Username and password </label>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                {redirectVar}\r\n            <div class=\"container\">\r\n                \r\n                <div class=\"login-form\">\r\n                    <div class=\"main-div\">\r\n                        <div class=\"panel\">\r\n                            <h2>Admin Login</h2>\r\n                            <p>Please enter your username and password</p>\r\n                        </div>\r\n                        {faillabel}  \r\n                            <div class=\"form-group\">\r\n                                <input onChange = {this.usernameChangeHandler} type=\"text\" class=\"form-control\" name=\"username\" placeholder=\"Username\"/>\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                                <input onChange = {this.passwordChangeHandler} type=\"password\" class=\"form-control\" name=\"password\" placeholder=\"Password\"/>\r\n                            </div>\r\n                            <button onClick = {this.submitLogin} class=\"btn btn-primary\">Login</button>   \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n//export Login Component\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}