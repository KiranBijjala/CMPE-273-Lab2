{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Redux Grubhub Final/Frontend/src/components/Menu/Menu.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport './Menu.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getProfile } from '../actions/index';\nimport { loginuser } from '../actions/index';\nimport { restaurantmenu } from '../actions';\nimport { getUserImage } from '../actions/index';\nimport { connect } from 'react-redux';\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav';\nimport { Field, reduxForm } from 'redux-form'; // Define a Login Component\n\nclass Menu extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.imageChangeHandler = e => {\n      // console.log('image change handle name: ' + e.target.name)\n      // console.log('image change handle value: ' + e.target.files[0])\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.uploadImage = e => {\n      e.preventDefault(); // var headers = new Headers();\n\n      const formData = new FormData(); // console.log(this.state.file.name)\n\n      let email = sessionStorage.getItem('email'); // this.setState({file.name:email}) // var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n\n      formData.append('myImage', this.state.file, email); // formData.append('myImage', this.state.file, email ) // formData.append('email', email)\n\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      axios.post('/menuimage', formData, config).then(response => {\n        let data = {\n          email: email\n        };\n        axios.post('http://localhost:3001/userimage', data).then(response => {\n          // update the state with the response data\n          console.log('Axios get:', response.data);\n          this.setState({\n            img: 'data:image/png;base64, ' + response.data\n          });\n        });\n        console.log('The file is successfully uploaded');\n      }).catch(error => {}); // prevent page from refresh\n    };\n\n    this.onSubmit = formValues => {\n      // console.log('OnSubmit' + formValues)\n      if (this.state.file !== '') {\n        this.uploadImage();\n      }\n\n      let val = JSON.parse(sessionStorage.getItem('ownerdata')); // console.log('temp : ' +val.email)\n\n      let data = {\n        dishname: formValues.dishname,\n        description: formValues.description,\n        price: formValues.baseprice,\n        section: formValues.section,\n        zipcode: val.restaurant_zipcode,\n        restaurantname: val.restaurant_name\n      };\n      axios.defaults.withCredentials = true; // console.log(data) // axios //   .post('http://localhost:3001/login', data) //   .then(response => { //     console.log('Status Code : ', response.status) //     if (response.status === 200) { //       sessionStorage.setItem('email', data.email) //       this.setState({ //         authFlag: true //       }) //     } //   }) //   .catch(err => { //     this.setState({ authFailed: true }) //   })\n\n      this.props.restaurantmenu(data, res => {\n        if (res.status === 200) {\n          console.log('Inside response', res.data[0]);\n          this.setState({\n            authFlag: true\n          });\n          this.props.history.push('/ownerrestaurantmenu');\n        } else {\n          alert('Please enter valid credentials');\n        }\n      }); // ,(response)=>{ //   console.log('Redux test: ' + this.props.user); //   console.log('Redux response: ' + response); // }) // console.log(data); // this.props.login(data, (response)=>{ //   console.log('Redux test: ' + this.props.user) //   this.setState({ //     img: 'data:image/png;base64, ' + response.image //   }) // });\n    };\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta,\n      className = {\n        className\n      }\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        htmlFor: \"email\",\n        style: {\n          color: '#6b6b83'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({\n        className: \"form-control\",\n        style: {\n          marginRight: '10px'\n        }\n      }, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.state = {\n      email: '',\n      file: '',\n      img: '',\n      authFlag: false,\n      authFailed: false\n    }; // Bind the handlers to this class // this.usernameChangeHandler = this.usernameChangeHandler.bind(this) // this.passwordChangeHandler = this.passwordChangeHandler.bind(this) // this.submitLogin = this.submitLogin.bind(this)\n  } // Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    let path = process.env.PUBLIC_URL;\n    path = path + '/profilepics/Biryani.png';\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      nameflag: false,\n      contactflag: false,\n      img: path,\n      passwordflag: false\n    });\n    let temp = sessionStorage.getItem('email');\n    let data = {\n      email: temp\n    };\n    console.log('Inside will mount: data value is: ' + data.email); // this.props.getProfile({ params: data }, (data)=>{ //   console.log('Redu test: ' + this.props.user) //   this.setState({ //     email: data.email, //     phonenumber: data.phone, //     password: data.password, //     firstname: data.first_name, //     lastname: data.last_name //   }) // });\n\n    axios.post('http://localhost:3001/userimage', data).then(response => {\n      // update the state with the response data\n      console.log('Axios get:', response.data);\n      this.setState({\n        img: 'data:image/png;base64, ' + response.data\n      });\n    });\n  }\n\n  render() {\n    // redirect based on successful login\n    let redirectVar = null;\n    let invalidtag = null;\n\n    if (!cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"*Invalid\\xA0user\\xA0name\\xA0password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        style: {\n          marginLeft: '537px'\n        },\n        className: \"btn\\xA0btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0Update\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(DisplayOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Your\\xA0account\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      className: \"ui\\xA0form\\xA0error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Add a dish to menu\"), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, React.createElement(Field, {\n      class: \"form-control\",\n      name: \"dishname\",\n      component: this.renderInput,\n      label: \" Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"description\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"section\",\n      component: this.renderInput,\n      label: \"Menu Section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"baseprice\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Base Price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"Add to Menu\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275\n      },\n      __self: this\n    })))))))))) //       </div>\n    ;\n  }\n\n} // export Login Component\n// export default BuyerProfile\n\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.dishname) {\n    error.dishname = 'Enter a valid dish name';\n  }\n\n  if (!formValues.description) {\n    error.description = 'Enter a valid description';\n  }\n\n  if (!formValues.baseprice) {\n    error.baseprice = 'Enter a valid baseprice';\n  }\n\n  if (!formValues.section) {\n    error.section = 'Enter a valid section';\n  }\n\n  return error;\n};\n\nconst mapStateToProps = state => {\n  return {\n    owner: state.owner\n  };\n};\n\nexport default connect(mapStateToProps, {\n  restaurantmenu: restaurantmenu\n})(reduxForm({\n  form: 'streamMenu',\n  validate: validate\n})(Menu));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Redux Grubhub Final/Frontend/src/components/Menu/Menu.js"],"names":["React","Component","axios","cookie","Redirect","Link","getProfile","loginuser","restaurantmenu","getUserImage","connect","DisplayOwnerNav","Field","reduxForm","Menu","constructor","props","inputChangeHandler","e","setState","target","name","value","imageChangeHandler","file","files","uploadImage","preventDefault","formData","FormData","email","sessionStorage","getItem","append","state","config","headers","post","then","response","data","console","log","img","catch","error","onSubmit","formValues","val","JSON","parse","dishname","description","price","baseprice","section","zipcode","restaurant_zipcode","restaurantname","restaurant_name","defaults","withCredentials","res","status","authFlag","history","push","alert","renderError","touched","color","renderInput","input","label","meta","className","marginRight","authFailed","componentWillMount","path","process","env","PUBLIC_URL","nameflag","contactflag","passwordflag","temp","render","redirectVar","invalidtag","load","updatePic","marginLeft","handleSubmit","validate","mapStateToProps","owner","form"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,cAAT,QAA+B,YAA/B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,eAAP,MAA4B,4BAA5B;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC,C,CAEA;;AACA,MAAMC,IAAN,SAAmBb,SAAnB,CAA6B;AAC3B;AACAc,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB;AACA,UAAMA,KAAN,EAFkB,CAEL;;AAFK,SAoCpBC,kBApCoB,GAoCCC,CAAC,IAAI;AACxB,WAAKC,QAAL,CAAc;AACZ,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AADd,OAAd;AAGD,KAxCmB;;AAAA,SA0CpBC,kBA1CoB,GA0CCL,CAAC,IAAI;AACxB;AACA;AACA,WAAKC,QAAL,CAAc;AACZK,QAAAA,IAAI,EAAEN,CAAC,CAACE,MAAF,CAASK,KAAT,CAAe,CAAf;AADM,OAAd;AAGD,KAhDmB;;AAAA,SAkDpBC,WAlDoB,GAkDNR,CAAC,IAAI;AACjBA,MAAAA,CAAC,CAACS,cAAF,GADiB,CACE;;AACnB,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB,CAFiB,CAEe;;AAChC,UAAIC,KAAK,GAAGC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAZ,CAHiB,CAG2B;;AAC5CJ,MAAAA,QAAQ,CAACK,MAAT,CAAgB,SAAhB,EAA2B,KAAKC,KAAL,CAAWV,IAAtC,EAA4CM,KAA5C,EAJiB,CAIkC;;AACnD,YAAMK,MAAM,GAAG;AACbC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AADI,OAAf;AAKAlC,MAAAA,KAAK,CACFmC,IADH,CACQ,YADR,EACsBT,QADtB,EACgCO,MADhC,EAEGG,IAFH,CAEQC,QAAQ,IAAI;AAChB,YAAIC,IAAI,GAAG;AAAEV,UAAAA,KAAK,EAAEA;AAAT,SAAX;AACA5B,QAAAA,KAAK,CAACmC,IAAN,CAAW,iCAAX,EAA8CG,IAA9C,EAAoDF,IAApD,CAAyDC,QAAQ,IAAI;AACnE;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAAQ,CAACC,IAAnC;AACA,eAAKrB,QAAL,CAAc;AACZwB,YAAAA,GAAG,EAAE,4BAA4BJ,QAAQ,CAACC;AAD9B,WAAd;AAGD,SAND;AAOAC,QAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACD,OAZH,EAaGE,KAbH,CAaSC,KAAK,IAAI,CAAE,CAbpB,EAViB,CAuBK;AACvB,KA1EmB;;AAAA,SA4EpBC,QA5EoB,GA4ETC,UAAU,IAAI;AACvB;AACA,UAAG,KAAKb,KAAL,CAAWV,IAAX,KAAkB,EAArB,EAAwB;AACtB,aAAKE,WAAL;AACD;;AACD,UAAIsB,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWnB,cAAc,CAACC,OAAf,CAAuB,WAAvB,CAAX,CAAV,CALuB,CAMvB;;AACA,UAAIQ,IAAI,GAAG;AACTW,QAAAA,QAAQ,EAAEJ,UAAU,CAACI,QADZ;AAETC,QAAAA,WAAW,EAAEL,UAAU,CAACK,WAFf;AAGTC,QAAAA,KAAK,EAAEN,UAAU,CAACO,SAHT;AAITC,QAAAA,OAAO,EAAER,UAAU,CAACQ,OAJX;AAKTC,QAAAA,OAAO,EAAER,GAAG,CAACS,kBALJ;AAMTC,QAAAA,cAAc,EAAEV,GAAG,CAACW;AANX,OAAX;AAQAzD,MAAAA,KAAK,CAAC0D,QAAN,CAAeC,eAAf,GAAiC,IAAjC,CAfuB,CAee;;AACtC,WAAK7C,KAAL,CAAWR,cAAX,CAA0BgC,IAA1B,EAAgCsB,GAAG,IAAI;AACrC,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACtBtB,UAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BoB,GAAG,CAACtB,IAAJ,CAAS,CAAT,CAA/B;AACA,eAAKrB,QAAL,CAAc;AACZ6C,YAAAA,QAAQ,EAAE;AADE,WAAd;AAIA,eAAKhD,KAAL,CAAWiD,OAAX,CAAmBC,IAAnB,CAAwB,sBAAxB;AACD,SAPD,MAOO;AACLC,UAAAA,KAAK,CAAC,gCAAD,CAAL;AACD;AACF,OAXD,EAhBuB,CA2BpB;AACJ,KAxGmB;;AAAA,SA0GpBC,WA1GoB,GA0GN,CAAC;AAAEvB,MAAAA,KAAF;AAASwB,MAAAA;AAAT,KAAD,KAAwB;AACpC,UAAIA,OAAO,IAAIxB,KAAf,EAAsB;AACpB,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAO,UAAA,KAAK,EAAE;AAAEyB,YAAAA,KAAK,EAAE;AAAT,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiCzB,KAAjC,CADF,CADF;AAKD;AACF,KAlHmB;;AAAA,SAoHpB0B,WApHoB,GAoHN,CAAC;AAAEC,MAAAA,KAAF;AAASC,MAAAA,KAAT;AAAgBC,MAAAA,IAAhB;AAAsBC,MAAAA,SAAS,GAAG;AAAEA,QAAAA;AAAF;AAAlC,KAAD,KAAuD;AACnE,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,OAAO,EAAC,OAAb;AAAqB,QAAA,KAAK,EAAE;AAAEL,UAAAA,KAAK,EAAE;AAAT,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,KADH,CADF,EAIE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,KAAK,EAAE;AAAEG,UAAAA,WAAW,EAAE;AAAf;AAFT,SAGMJ,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,EASG,KAAKJ,WAAL,CAAiBM,IAAjB,CATH,CADF;AAaD,KAlImB;;AAGlB,SAAKxC,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAE,EADI;AAEXN,MAAAA,IAAI,EAAE,EAFK;AAGXmB,MAAAA,GAAG,EAAE,EAHM;AAIXqB,MAAAA,QAAQ,EAAE,KAJC;AAKXa,MAAAA,UAAU,EAAE;AALD,KAAb,CAHkB,CAShB;AACH,GAZ0B,CAYzB;;;AACFC,EAAAA,kBAAkB,GAAI;AACpB,QAAIC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,UAAvB;AACAH,IAAAA,IAAI,GAAGA,IAAI,GAAG,0BAAd;AAEA,SAAK5D,QAAL,CAAc;AACZ6C,MAAAA,QAAQ,EAAE,KADE;AAEZa,MAAAA,UAAU,EAAE,KAFA;AAGZM,MAAAA,QAAQ,EAAE,KAHE;AAIZC,MAAAA,WAAW,EAAE,KAJD;AAKZzC,MAAAA,GAAG,EAAEoC,IALO;AAMZM,MAAAA,YAAY,EAAE;AANF,KAAd;AAQA,QAAIC,IAAI,GAAGvD,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAAX;AACA,QAAIQ,IAAI,GAAG;AAAEV,MAAAA,KAAK,EAAEwD;AAAT,KAAX;AACA7C,IAAAA,OAAO,CAACC,GAAR,CAAY,uCAAuCF,IAAI,CAACV,KAAxD,EAdoB,CAc2C;;AAE/D5B,IAAAA,KAAK,CAACmC,IAAN,CAAW,iCAAX,EAA8CG,IAA9C,EAAoDF,IAApD,CAAyDC,QAAQ,IAAI;AACnE;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,QAAQ,CAACC,IAAnC;AACA,WAAKrB,QAAL,CAAc;AACZwB,QAAAA,GAAG,EAAE,4BAA4BJ,QAAQ,CAACC;AAD9B,OAAd;AAGD,KAND;AAOD;;AAkGD+C,EAAAA,MAAM,GAAI;AACR;AACA,QAAIC,WAAW,GAAG,IAAlB;AACA,QAAIC,UAAU,GAAG,IAAjB;;AACA,QAAI,CAACtF,MAAM,CAACuF,IAAP,CAAY,QAAZ,CAAL,EAA4B;AAC1BF,MAAAA,WAAW,GAAG,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAd;AACD;;AAED,QAAI,KAAKtD,KAAL,CAAW2C,UAAf,EAA2B;AACzBY,MAAAA,UAAU,GACR;AAAO,QAAA,KAAK,EAAE;AAAEnB,UAAAA,KAAK,EAAE;AAAT,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDADF;AAGD;;AACD,QAAIqB,SAAS,GAAG,IAAhB;;AAEA,QAAI,KAAKzD,KAAL,CAAWV,IAAX,KAAoB,EAAxB,EAA4B;AAC1BmE,MAAAA,SAAS,GACP;AACE,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SADT;AAEE,QAAA,SAAS,EAAC,iBAFZ;AAGE,QAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0DADF;AASD;;AAED,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,WADH,EAGE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAHF,EAOE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAkCE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,qBADZ;AAEE,MAAA,QAAQ,EAAE,KAAKxE,KAAL,CAAW6E,YAAX,CAAwB,KAAK/C,QAA7B,CAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAI,MAAA,KAAK,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAC,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAFF,EAGE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,KAAK,EAAC,cADR;AAEE,MAAA,IAAI,EAAC,UAFP;AAGE,MAAA,SAAS,EAAE,KAAKyB,WAHlB;AAIE,MAAA,KAAK,EAAC,OAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,EAWE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE,KAAKA,WAHlB;AAIE,MAAA,KAAK,EAAC,aAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAiBE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,SADP;AAEE,MAAA,SAAS,EAAE,KAAKA,WAFlB;AAGE,MAAA,KAAK,EAAC,cAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAjBF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,EAyBE;AAAK,MAAA,KAAK,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAC,WADP;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,SAAS,EAAE,KAAKA,WAHlB;AAIE,MAAA,KAAK,EAAC,YAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAzBF,EAiCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EAkCE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAlCF,EAqCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArCF,CADF,CAJF,CADF,CAlCF,CAPF,CAHF,CALF,CAHF,CADF,CA0GE;AA1GF;AA4GD;;AA7Q0B,C,CA+Q7B;AACA;;;AAEA,MAAMuB,QAAQ,GAAG/C,UAAU,IAAI;AAC7B,QAAMF,KAAK,GAAG,EAAd;;AACA,MAAI,CAACE,UAAU,CAACI,QAAhB,EAA0B;AACxBN,IAAAA,KAAK,CAACM,QAAN,GAAiB,yBAAjB;AACD;;AACD,MAAI,CAACJ,UAAU,CAACK,WAAhB,EAA6B;AAC3BP,IAAAA,KAAK,CAACO,WAAN,GAAoB,2BAApB;AACD;;AACD,MAAI,CAACL,UAAU,CAACO,SAAhB,EAA2B;AACzBT,IAAAA,KAAK,CAACS,SAAN,GAAkB,yBAAlB;AACD;;AACD,MAAI,CAACP,UAAU,CAACQ,OAAhB,EAAyB;AACvBV,IAAAA,KAAK,CAACU,OAAN,GAAgB,uBAAhB;AACD;;AACD,SAAOV,KAAP;AACD,CAfD;;AAiBA,MAAMkD,eAAe,GAAG7D,KAAK,IAAI;AAC/B,SAAO;AAAE8D,IAAAA,KAAK,EAAE9D,KAAK,CAAC8D;AAAf,GAAP;AACD,CAFD;;AAIA,eAAetF,OAAO,CACpBqF,eADoB,EAEpB;AAAEvF,EAAAA,cAAc,EAAEA;AAAlB,CAFoB,CAAP,CAIbK,SAAS,CAAC;AACRoF,EAAAA,IAAI,EAAE,YADE;AAERH,EAAAA,QAAQ,EAAEA;AAFF,CAAD,CAAT,CAGGhF,IAHH,CAJa,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport '../../App.css'\nimport './Menu.css'\nimport axios from 'axios'\nimport cookie from 'react-cookies'\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { getProfile } from '../actions/index'\n\nimport { loginuser } from '../actions/index'\nimport { restaurantmenu } from '../actions'\nimport { getUserImage } from '../actions/index'\nimport { connect } from 'react-redux'\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav'\nimport { Field, reduxForm } from 'redux-form'\n\n// Define a Login Component\nclass Menu extends Component {\n  // call the constructor method\n  constructor (props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props) // maintain the state required for this component\n    this.state = {\n      email: '',\n      file: '',\n      img: '',\n      authFlag: false,\n      authFailed: false\n    } // Bind the handlers to this class // this.usernameChangeHandler = this.usernameChangeHandler.bind(this) // this.passwordChangeHandler = this.passwordChangeHandler.bind(this) // this.submitLogin = this.submitLogin.bind(this)\n  } // Call the Will Mount to set the auth Flag to false\n  componentWillMount () {\n    let path = process.env.PUBLIC_URL\n    path = path + '/profilepics/Biryani.png'\n    \n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      nameflag: false,\n      contactflag: false,\n      img: path,\n      passwordflag: false\n    })\n    let temp = sessionStorage.getItem('email')\n    let data = { email: temp }\n    console.log('Inside will mount: data value is: ' + data.email) // this.props.getProfile({ params: data }, (data)=>{ //   console.log('Redu test: ' + this.props.user) //   this.setState({ //     email: data.email, //     phonenumber: data.phone, //     password: data.password, //     firstname: data.first_name, //     lastname: data.last_name //   }) // });\n\n    axios.post('http://localhost:3001/userimage', data).then(response => {\n      // update the state with the response data\n      console.log('Axios get:', response.data)\n      this.setState({\n        img: 'data:image/png;base64, ' + response.data\n      })\n    })\n  }\n\n  inputChangeHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  imageChangeHandler = e => {\n    // console.log('image change handle name: ' + e.target.name)\n    // console.log('image change handle value: ' + e.target.files[0])\n    this.setState({\n      file: e.target.files[0]\n    })\n  } // submit Login handler to send a request to the node backend\n\n  uploadImage = e => {\n    e.preventDefault() // var headers = new Headers();\n    const formData = new FormData() // console.log(this.state.file.name)\n    let email = sessionStorage.getItem('email') // this.setState({file.name:email}) // var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n    formData.append('myImage', this.state.file, email) // formData.append('myImage', this.state.file, email ) // formData.append('email', email)\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }\n    axios\n      .post('/menuimage', formData, config)\n      .then(response => {\n        let data = { email: email }\n        axios.post('http://localhost:3001/userimage', data).then(response => {\n          // update the state with the response data\n          console.log('Axios get:', response.data)\n          this.setState({\n            img: 'data:image/png;base64, ' + response.data\n          })\n        })\n        console.log('The file is successfully uploaded')\n      })\n      .catch(error => {}) // prevent page from refresh\n  }\n\n  onSubmit = formValues => {\n    // console.log('OnSubmit' + formValues)\n    if(this.state.file!==''){\n      this.uploadImage()\n    }\n    let val = JSON.parse(sessionStorage.getItem('ownerdata'));\n    // console.log('temp : ' +val.email)\n    let data = {\n      dishname: formValues.dishname,\n      description: formValues.description,\n      price: formValues.baseprice,\n      section: formValues.section,\n      zipcode: val.restaurant_zipcode,\n      restaurantname: val.restaurant_name\n    }\n    axios.defaults.withCredentials = true // console.log(data) // axios //   .post('http://localhost:3001/login', data) //   .then(response => { //     console.log('Status Code : ', response.status) //     if (response.status === 200) { //       sessionStorage.setItem('email', data.email) //       this.setState({ //         authFlag: true //       }) //     } //   }) //   .catch(err => { //     this.setState({ authFailed: true }) //   })\n    this.props.restaurantmenu(data, res => {\n      if (res.status === 200) {\n        console.log('Inside response', res.data[0])\n        this.setState({\n          authFlag: true\n        })\n        \n        this.props.history.push('/ownerrestaurantmenu')\n      } else {\n        alert('Please enter valid credentials')\n      }\n    }) // ,(response)=>{ //   console.log('Redux test: ' + this.props.user); //   console.log('Redux response: ' + response); // }) // console.log(data); // this.props.login(data, (response)=>{ //   console.log('Redux test: ' + this.props.user) //   this.setState({ //     img: 'data:image/png;base64, ' + response.image //   }) // });\n  }\n\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div>\n          <label style={{ color: 'red' }}>{error}</label>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, meta, className = { className } }) => {\n    return (\n      <div>\n        <div htmlFor='email' style={{ color: '#6b6b83' }}>\n          {label}\n        </div>\n        <input\n          className='form-control'\n          style={{ marginRight: '10px' }}\n          {...input}\n        />\n        {this.renderError(meta)}\n      </div>\n    )\n  }\n\n  render () {\n    // redirect based on successful login\n    let redirectVar = null\n    let invalidtag = null\n    if (!cookie.load('cookie')) {\n      redirectVar = <Redirect to='/login' />\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = (\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\n      )\n    }\n    let updatePic = null\n\n    if (this.state.file !== '') {\n      updatePic = (\n        <button\n          style={{ marginLeft: '537px' }}\n          className='btn btn-link'\n          type='submit'\n        >\n                    Update\n        </button>\n      )\n    }\n\n    return (\n      <div>\n        {redirectVar}\n\n        <div className='row'>\n          <div className='col-sm-2'>\n            <DisplayOwnerNav />\n          </div>\n\n          <div className='col-sm-10'>\n            {/*             <div class='container'> */}\n\n            <div class='login-form'>\n              {/* <div class='main-div'> */}\n\n              <div class='panel'>\n                <h2>Your account</h2>\n                {/* {invalidtag} */}\n              </div>\n              <div className='row'>\n                {/* <div className='col-sm-4'> */}\n                  {/* <form\n                    onSubmit={this.uploadImage}\n                    enctype='multipart/form-data'\n                  >\n                    <div class='preview text-center'>\n                      <img // class='preview-img' // src='http://simpleicon.com/wp-content/uploads/account.png'\n                        src={this.state.img}\n                        alt='Preview Image'\n                        width='200'\n                        height='200'\n                      />\n\n                      <span class='Error' />\n                    </div>\n                    <br/>\n                    <div style={{ marginLeft: '70px' }}>\n                      {' '}\n                      <input style={{color:'blue'}}\n                        type='file'\n                        onChange={this.imageChangeHandler}\n                        name='myImage'\n                        id='myImage'\n                      />\n                      <br />\n                      <button className='btn btn-link' type='submit'>\n                    Update\n                    </button>\n                    </div>\n\n                    \n                  </form> */}\n                {/* </div> */}\n                <div className='col-sm-6'>\n                  <form\n                    className='ui form error'\n                    onSubmit={this.props.handleSubmit(this.onSubmit)}\n                  >\n                    <ul class='list-group'>\n                      <li class='list-group-item'>\n                        <br />\n                        <h2>Add a dish to menu</h2>\n                        <div class='form-group'>\n                          <Field\n                            class='form-control'\n                            name='dishname'\n                            component={this.renderInput}\n                            label=' Name'\n                          />\n                        </div>\n                        <Field\n                          name='description'\n                          type='text'\n                          component={this.renderInput}\n                          label='Description'\n                        />\n                        <div class='form-group'>\n                          <Field\n                            name='section'\n                            component={this.renderInput}\n                            label='Menu Section'\n                          />\n                        </div>\n                        <br />\n                        <div class='form-group'>\n                          <Field\n                            name='baseprice'\n                            type='text'\n                            component={this.renderInput}\n                            label='Base Price'\n                          />\n                        </div>\n                        <br />\n                        <button type='submit' class='btn btn-info'>\n                          Add to Menu\n                        </button>\n                        <br />\n                      </li>\n                    </ul>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      //       </div>\n    )\n  }\n}\n// export Login Component\n// export default BuyerProfile\n\nconst validate = formValues => {\n  const error = {}\n  if (!formValues.dishname) {\n    error.dishname = 'Enter a valid dish name'\n  }\n  if (!formValues.description) {\n    error.description = 'Enter a valid description'\n  }\n  if (!formValues.baseprice) {\n    error.baseprice = 'Enter a valid baseprice'\n  }\n  if (!formValues.section) {\n    error.section = 'Enter a valid section'\n  }\n  return error\n}\n\nconst mapStateToProps = state => {\n  return { owner: state.owner }\n}\n\nexport default connect(\n  mapStateToProps,\n  { restaurantmenu: restaurantmenu }\n)(\n  reduxForm({\n    form: 'streamMenu',\n    validate: validate\n  })(Menu)\n)\n"]},"metadata":{},"sourceType":"module"}