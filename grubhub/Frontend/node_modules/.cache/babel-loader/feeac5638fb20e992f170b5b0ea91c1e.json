{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport './Search.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getRestaurantDetails } from '../actions';\nimport { loginuser } from '../actions';\nimport { getUserImage } from '../actions';\nimport Display from './Display/Display';\nimport { connect } from 'react-redux';\nimport BuyerOwnerNav from './Display/BuyerOwnerNav';\nimport { Field, reduxForm } from 'redux-form'; // Define a Login Component\n\nclass Search extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.selectRestaurant = e => {\n      // console.log(e.target.id);\n      let temp = e.target.id; // alert(e.target.id);\n\n      sessionStorage.setItem('selectedRestaurant', temp);\n    };\n\n    this.OnClickfilter = e => {\n      let filterData = null;\n      let filter = [];\n      let count = 0;\n      let filterList = this.state.restaurantdetails; // console.log(filterList[0].cuisine);\n\n      filterData = Object.keys(filterList).map(restaurant => {\n        count += 1; // console.log(filterList[restaurant].cuisine)\n        // console.log(this.state.filter)\n\n        if (typeof filterList[restaurant] !== 'undefined') {\n          if (filterList[restaurant].cuisine === this.state.filter) {\n            console.log(filterList[restaurant].cuisine);\n            filter.push(filterList[restaurant]);\n            return filterList[restaurant];\n          }\n        }\n      });\n      this.setState({\n        restaurantdetails: filter\n      });\n    };\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.imageChangeHandler = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.handleClick = event => {\n      this.setState({\n        currentPage: Number(event.target.id)\n      }, () => {\n        alert(this.state.currentPage);\n      });\n    };\n\n    this.state = {\n      file: '',\n      img: '',\n      restaurantimg: '',\n      restaurantnames: '',\n      restaurantdetails: '',\n      authFlag: false,\n      authFailed: false,\n      cuisine: \"\",\n      currentPage: 1\n    };\n  } // Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    sessionStorage.setItem('checkout', \"new\"); // let path = process.env.PUBLIC_URL\n    // let restaurantImgPath = process.env.PUBLIC_URL\n    // path = path + '/profile/Grubhub.png'\n    // restaurantImgPath = restaurantImgPath+'/profile/Sankranthi.png'\n\n    let restaurantImgPath = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Sankranthi.png';\n    let path = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Avatar.png';\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      img: path,\n      restaurantimg: restaurantImgPath,\n      restaurantnames: true,\n      cuisine: \"\",\n      todos: [],\n      currentPage: 1,\n      todosPerPage: 2\n    });\n    let restaurants = [];\n\n    if (sessionStorage.getItem('restaurants') != null) {\n      restaurants = sessionStorage.getItem('restaurants');\n    }\n\n    let data = {\n      details: restaurants\n    };\n    axios.defaults.withCredentials = true;\n    this.props.getRestaurantDetails({\n      params: data\n    }, response => {\n      console.log(this.props.user);\n      this.setState({\n        restaurantdetails: this.props.user,\n        todos: response.data\n      });\n      console.log(this.state.todos);\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          todos = _this$state.todos,\n          currentPage = _this$state.currentPage,\n          todosPerPage = _this$state.todosPerPage;\n    const indexOfLastTodo = currentPage * todosPerPage;\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage;\n    const currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo);\n    console.log(indexOfFirstTodo, indexOfLastTodo);\n    console.log(currentTodos);\n    console.log(todos);\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\n      pageNumbers.push(i);\n    }\n\n    console.log(pageNumbers);\n    const renderPageNumbers = pageNumbers.map(number => {\n      return React.createElement(\"li\", {\n        class: \"page-item\",\n        key: number,\n        id: number,\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"page-link\",\n        key: number,\n        id: number,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), number);\n    });\n    let invalidtag = null;\n    let resturantslist = null;\n    let list = currentTodos;\n    resturantslist = Object.keys(list).map(restaurant => {\n      console.log(list[restaurant]);\n      return React.createElement(\"a\", {\n        href: \"/restaurantmenu\",\n        id: list[restaurant].restaurant_name,\n        class: \"list-group-item list-group-item-action\",\n        onClick: this.selectRestaurant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Display, {\n        id: list[restaurant].restaurant_name,\n        image: list[restaurant].image,\n        restaurant_name: list[restaurant].restaurant_name,\n        sections: list[restaurant].sections,\n        rating: list[restaurant].rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }));\n    }); // console.log(resturantslist)\n    // if (!cookie.load('cookie')) {\n    //   redirectVar = <Redirect to='/login' />\n    // }\n\n    let redirectVar = null;\n\n    if (sessionStorage.getItem('JWT' === null)) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"*Invalid user name password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        style: {\n          marginLeft: '537px'\n        },\n        className: \"btn btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Update\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, redirectVar, invalidtag, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(BuyerOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Your account\")), React.createElement(\"div\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, resturantslist, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onChange: this.inputChangeHandler,\n      type: \"filter\",\n      name: \"filter\",\n      type: \"filter\",\n      class: \"form-control\",\n      autoFocus: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      onClick: this.OnClickfilter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, \"Filter\")), React.createElement(\"nav\", {\n      \"aria-label\": \"Page navigation example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"pagination\",\n      id: \"page-numbers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    }, renderPageNumbers))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getRestaurantDetails: getRestaurantDetails\n})(reduxForm({\n  form: 'streamSearch' // validate: validate\n\n})(Search));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Search.js"],"names":["React","Component","axios","cookie","Redirect","Link","getRestaurantDetails","loginuser","getUserImage","Display","connect","BuyerOwnerNav","Field","reduxForm","Search","constructor","props","selectRestaurant","e","temp","target","id","sessionStorage","setItem","OnClickfilter","filterData","filter","count","filterList","state","restaurantdetails","Object","keys","map","restaurant","cuisine","console","log","push","setState","inputChangeHandler","name","value","imageChangeHandler","file","files","handleClick","event","currentPage","Number","alert","img","restaurantimg","restaurantnames","authFlag","authFailed","componentWillMount","restaurantImgPath","path","todos","todosPerPage","restaurants","getItem","data","details","defaults","withCredentials","params","response","user","render","indexOfLastTodo","indexOfFirstTodo","currentTodos","slice","pageNumbers","i","Math","ceil","length","renderPageNumbers","number","invalidtag","resturantslist","list","restaurant_name","image","sections","rating","redirectVar","color","updatePic","marginLeft","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport './Search.css'\r\nimport axios from 'axios'\r\nimport cookie from 'react-cookies'\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { getRestaurantDetails } from '../actions'\r\nimport { loginuser } from '../actions'\r\nimport { getUserImage } from '../actions'\r\nimport Display from './Display/Display'\r\nimport { connect } from 'react-redux'\r\nimport BuyerOwnerNav from './Display/BuyerOwnerNav'\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\n// Define a Login Component\r\nclass Search extends Component {\r\n  // call the constructor method\r\n  constructor(props) {\r\n    // Call the constrictor of Super class i.e The Component\r\n    super(props)\r\n    // maintain the state required for this component\r\n    this.state = {\r\n      file: '',\r\n      img: '',\r\n      restaurantimg: '',\r\n      restaurantnames: '',\r\n      restaurantdetails: '',\r\n      authFlag: false,\r\n      authFailed: false,\r\n      cuisine: \"\",\r\n      currentPage: 1,\r\n    }\r\n\r\n  }\r\n  // Call the Will Mount to set the auth Flag to false\r\n  componentWillMount() {\r\n    sessionStorage.setItem('checkout', \"new\")\r\n\r\n    // let path = process.env.PUBLIC_URL\r\n    // let restaurantImgPath = process.env.PUBLIC_URL\r\n    // path = path + '/profile/Grubhub.png'\r\n    // restaurantImgPath = restaurantImgPath+'/profile/Sankranthi.png'\r\n    let restaurantImgPath = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Sankranthi.png';\r\n    let path = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Avatar.png';\r\n    this.setState({\r\n      authFlag: false,\r\n      authFailed: false,\r\n      img: path,\r\n      restaurantimg: restaurantImgPath,\r\n      restaurantnames: true,\r\n      cuisine: \"\",\r\n      todos: [],\r\n      currentPage: 1,\r\n      todosPerPage: 2,\r\n    })\r\n\r\n    let restaurants = []\r\n    if (sessionStorage.getItem('restaurants') != null) {\r\n      restaurants = sessionStorage.getItem('restaurants');\r\n    }\r\n\r\n    let data = {\r\n      details: restaurants\r\n    }\r\n    axios.defaults.withCredentials = true\r\n\r\n    this.props.getRestaurantDetails({ params: data }, (response) => {\r\n      console.log(this.props.user)\r\n      this.setState({\r\n        restaurantdetails: this.props.user,\r\n        todos: response.data\r\n      })\r\n        console.log(this.state.todos);\r\n      })\r\n\r\n    }\r\n    \r\n  selectRestaurant = (e) => {\r\n    // console.log(e.target.id);\r\n    let temp = e.target.id;\r\n    // alert(e.target.id);\r\n    sessionStorage.setItem('selectedRestaurant', temp)\r\n  }\r\n\r\n  OnClickfilter = e => {\r\n    let filterData = null\r\n    let filter = []\r\n    let count = 0\r\n    let filterList = this.state.restaurantdetails\r\n    // console.log(filterList[0].cuisine);\r\n    filterData = Object.keys(filterList).map(restaurant => {\r\n      count += 1\r\n      // console.log(filterList[restaurant].cuisine)\r\n      // console.log(this.state.filter)\r\n      if (typeof filterList[restaurant] !== 'undefined') {\r\n        if (filterList[restaurant].cuisine === this.state.filter) {\r\n          console.log(filterList[restaurant].cuisine)\r\n          filter.push(filterList[restaurant])\r\n          return filterList[restaurant]\r\n        } \r\n      }\r\n    })\r\n    this.setState({ restaurantdetails: filter })\r\n  }\r\n\r\n  inputChangeHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  imageChangeHandler = e => {\r\n    this.setState({\r\n      file: e.target.files[0]\r\n    })\r\n  }\r\n\r\n  handleClick = event => {\r\n    this.setState(\r\n      {\r\n        currentPage: Number(event.target.id)\r\n      },\r\n      () => {\r\n        alert(this.state.currentPage)\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n  render() {\r\n   \r\n    const { todos, currentPage, todosPerPage } = this.state\r\n    const indexOfLastTodo = currentPage * todosPerPage\r\n    const indexOfFirstTodo = indexOfLastTodo - todosPerPage\r\n    const currentTodos = todos.slice(indexOfFirstTodo, indexOfLastTodo)\r\n    console.log(indexOfFirstTodo, indexOfLastTodo)\r\n    console.log(currentTodos)\r\n    console.log(todos);\r\n\r\n    const pageNumbers = []\r\n    for (let i = 1; i <= Math.ceil(todos.length / todosPerPage); i++) {\r\n      pageNumbers.push(i)\r\n    }\r\n    console.log(pageNumbers);\r\n    const renderPageNumbers = pageNumbers.map(number => {\r\n      return (\r\n        <li\r\n          class='page-item'\r\n          key={number}\r\n          id={number}\r\n          onClick={this.handleClick}\r\n        >\r\n        <a class=\"page-link\" key={number}\r\n          id={number} ></a>\r\n        {number}\r\n        </li>\r\n      )\r\n    })\r\n\r\n    let invalidtag = null\r\n    let resturantslist = null\r\n    let list = currentTodos\r\n    resturantslist = Object.keys(list).map((restaurant) => {\r\n      console.log(list[restaurant]);\r\n\r\n      return (<a href=\"/restaurantmenu\" id={list[restaurant].restaurant_name} class=\"list-group-item list-group-item-action\" onClick={this.selectRestaurant}>\r\n        <Display id={list[restaurant].restaurant_name} image={list[restaurant].image} restaurant_name={list[restaurant].restaurant_name} sections={list[restaurant].sections} rating={list[restaurant].rating} />\r\n      </a>\r\n      )\r\n    });\r\n    // console.log(resturantslist)\r\n    // if (!cookie.load('cookie')) {\r\n    //   redirectVar = <Redirect to='/login' />\r\n    // }\r\n    let redirectVar  = null\r\n    if (sessionStorage.getItem('JWT' === null)){ \r\n      redirectVar  = <Redirect to='/login'/>\r\n    }\r\n    \r\n\r\n    if (this.state.authFailed) {\r\n      invalidtag = (\r\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\r\n      )\r\n    }\r\n    let updatePic = null\r\n\r\n    if (this.state.file !== '') {\r\n      updatePic = (\r\n        <button\r\n          style={{ marginLeft: '537px' }}\r\n          className='btn btn-link'\r\n          type='submit'\r\n        >\r\n          Update\r\n        </button>\r\n      )\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n      <div>\r\n        {redirectVar}\r\n       {invalidtag}\r\n        <div className='row'>\r\n          <div className='col-sm-2'>\r\n            <BuyerOwnerNav />\r\n          </div>\r\n\r\n          <div className='col-sm-10'>\r\n            <div class='container'>\r\n\r\n              <div class='login-form'>\r\n                {/* <div class='main-div'> */}\r\n                \r\n                  <h2>Your account</h2>\r\n                  {/* {invalidtag} */}\r\n                </div>\r\n                <div class=\"list-group\">\r\n                  {resturantslist}\r\n                  <br></br>\r\n                  <div class='panel'>\r\n                \r\n                </div>\r\n                  <input onChange={this.inputChangeHandler} type=\"filter\" name=\"filter\" type=\"filter\" class=\"form-control\" autoFocus  />\r\n                  <button type=\"submit\" className=\"btn btn-primary\" onClick={this.OnClickfilter} >Filter</button>\r\n              </div>       \r\n              <nav aria-label=\"Page navigation example\">\r\n                <ul className=\"pagination\" id='page-numbers'>\r\n                {renderPageNumbers}\r\n                </ul>\r\n                </nav> \r\n            </div>\r\n          </div>\r\n          \r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRestaurantDetails: getRestaurantDetails }\r\n)(\r\n  reduxForm({\r\n    form: 'streamSearch'\r\n    // validate: validate\r\n  })(Search)\r\n)"]},"metadata":{},"sourceType":"module"}