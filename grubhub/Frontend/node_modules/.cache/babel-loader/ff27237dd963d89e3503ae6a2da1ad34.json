{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab1/grubhub/Frontend/src/components/OwnerRestaurantMenu/OwnerRestaurantMenu.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport './OwnerRestaurantMenu.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getRestaurantDetails } from '../../actions';\nimport { getrestaurantsections } from '../../actions';\nimport { getSectionsMenu } from '../../actions';\nimport { deleteSection } from '../../actions';\nimport { loginuser } from '../../actions';\nimport { getUserImage } from '../../actions';\nimport OwnerSectionMenu from './OwnerSectionMenu';\nimport Cart from '../Cart/Cart';\nimport { connect } from 'react-redux';\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav';\nimport { Field, reduxForm } from 'redux-form'; // Define a Login Component\n\nclass OwnerRestaurantMenu extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.deleteSection = e => {\n      e.preventDefault();\n      let data = {\n        section: e.target.getAttribute('section')\n      };\n      axios.defaults.withCredentials = true;\n      this.props.deleteSection(data, res => {\n        if (res.status === 200) {\n          console.log('Inside response', res.data[0]);\n          this.setState({\n            authFlag: true\n          }); // sessionStorage.setItem('email', res.data[0].email)\n          // sessionStorage.setItem('username', res.data[0].username)\n          // sessionStorage.setItem('cookie', res.data[0].type) // cookies.save('cookie', res.data[0].type, {maxAge: 900000, httpOnly: false, path: '/'}); // cookies.save('userid', res.data[0]._id, {maxAge: 900000, httpOnly: false, path: '/'}); // cookies.save('username', res.data[0].username, {maxAge: 900000, httpOnly: false, path: '/'});\n          // this.props.history.push('/home')\n\n          window.location.reload();\n        } else {\n          alert('Please enter valid credentials');\n        }\n      });\n    };\n\n    this.state = {\n      file: '',\n      img: '',\n      sections: '',\n      sectionArr: '',\n      restaurantimg: '',\n      restaurantnames: '',\n      restaurantdetails: '',\n      authFlag: false,\n      authFailed: false\n    };\n  } // Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    let x = JSON.parse(sessionStorage.getItem('ownerdata'));\n    console.log(x[0].restaurant_name);\n    let data = {\n      restaurant_name: x[0].restaurant_name\n    };\n    axios.defaults.withCredentials = true;\n    this.props.getrestaurantsections({\n      params: data\n    }, response => {\n      console.log(this.props.user[0].section);\n      this.setState({\n        sections: this.props.user[0].section\n      });\n      console.log(this.props.user);\n      sessionStorage.setItem('sections', this.props.sections); // alert(sessionStorage.getItem('sections'))\n    });\n  }\n\n  render() {\n    // redirect based on successful login\n    let redirectVar = null;\n    let invalidtag = null;\n    let menulist = null;\n    let resturantslist = null;\n    let displayCart = null;\n\n    if (sessionStorage.getItem('checkout') !== 'new') {\n      displayCart = React.createElement(Cart, {\n        data: JSON.parse(sessionStorage.getItem('checkout')),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      });\n    } else {\n      displayCart = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Add items to your cart\");\n    } // let list = sessionStorage.getItem('sections');\n\n\n    let list = this.state.sections; // console.log(\"List\", list[0]);\n\n    if (typeof list === 'undefined' && list === null) {\n      // console.log('Loading data')\n      //  window.location.reload();\n      resturantslist = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"Loading data!\");\n    } else {\n      resturantslist = Object.keys(list).map(section => {\n        // console.log('List',list)\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121\n          },\n          __self: this\n        }, list[section].section), React.createElement(\"button\", {\n          section: list[section].section,\n          style: {\n            float: 'center'\n          },\n          className: \"submit\",\n          onClick: this.deleteSection,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, \"Delete Section\"), React.createElement(\"div\", {\n          class: \"list-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }), React.createElement(OwnerSectionMenu, {\n          sections: list[section].section,\n          restaurant: sessionStorage.getItem('selectedRestaurant'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        })));\n      });\n    }\n\n    if (!cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"*Invalid user name password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        style: {\n          marginLeft: '537px'\n        },\n        className: \"btn btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Update\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(DisplayOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })), resturantslist))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n} // export default connect( mapStateToProps , {getProfile: getProfile, getUserImage:getUserImage})(Search);\n\n\nexport default connect(mapStateToProps, {\n  getrestaurantsections,\n  getSectionsMenu,\n  deleteSection\n})(reduxForm({\n  form: 'streamSearch' // validate: validate\n\n})(OwnerRestaurantMenu));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab1/grubhub/Frontend/src/components/OwnerRestaurantMenu/OwnerRestaurantMenu.js"],"names":["React","Component","axios","cookie","Redirect","Link","getRestaurantDetails","getrestaurantsections","getSectionsMenu","deleteSection","loginuser","getUserImage","OwnerSectionMenu","Cart","connect","DisplayOwnerNav","Field","reduxForm","OwnerRestaurantMenu","constructor","props","inputChangeHandler","e","setState","target","name","value","preventDefault","data","section","getAttribute","defaults","withCredentials","res","status","console","log","authFlag","window","location","reload","alert","state","file","img","sections","sectionArr","restaurantimg","restaurantnames","restaurantdetails","authFailed","componentWillMount","x","JSON","parse","sessionStorage","getItem","restaurant_name","params","response","user","setItem","render","redirectVar","invalidtag","menulist","resturantslist","displayCart","list","Object","keys","map","float","load","color","updatePic","marginLeft","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../../App.css'\r\nimport './OwnerRestaurantMenu.css'\r\nimport axios from 'axios'\r\nimport cookie from 'react-cookies'\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { getRestaurantDetails } from '../../actions'\r\nimport { getrestaurantsections } from '../../actions'\r\nimport { getSectionsMenu } from '../../actions'\r\nimport { deleteSection } from '../../actions'\r\nimport { loginuser } from '../../actions'\r\nimport { getUserImage } from '../../actions'\r\nimport OwnerSectionMenu from './OwnerSectionMenu'\r\nimport Cart from '../Cart/Cart'\r\nimport { connect } from 'react-redux'\r\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav'\r\n\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n// Define a Login Component\r\nclass OwnerRestaurantMenu extends Component {\r\n  // call the constructor method\r\n  constructor (props) {\r\n    // Call the constrictor of Super class i.e The Component\r\n    super(props)\r\n    // maintain the state required for this component\r\n    this.state = {\r\n      file: '',\r\n      img: '',\r\n      sections: '',\r\n      sectionArr: '',\r\n      restaurantimg: '',\r\n      restaurantnames: '',\r\n      restaurantdetails: '',\r\n      authFlag: false,\r\n      authFailed: false\r\n    }\r\n  }\r\n  // Call the Will Mount to set the auth Flag to false\r\n  componentWillMount () {\r\n    let x = JSON.parse(sessionStorage.getItem('ownerdata'))\r\n    console.log(x[0].restaurant_name);\r\n    let data = {\r\n      restaurant_name: x[0].restaurant_name\r\n    }\r\n    axios.defaults.withCredentials = true\r\n\r\n    this.props.getrestaurantsections({ params: data }, response => {\r\n      console.log( this.props.user[0].section)\r\n      this.setState({\r\n          sections: this.props.user[0].section\r\n        })\r\n      console.log(this.props.user)\r\n      sessionStorage.setItem('sections', this.props.sections)\r\n\r\n      // alert(sessionStorage.getItem('sections'))\r\n    })\r\n  }\r\n\r\n  inputChangeHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n\r\n  deleteSection = e => {\r\n    e.preventDefault();\r\n    let data = {\r\n      section: e.target.getAttribute('section'),\r\n    }\r\n    axios.defaults.withCredentials = true\r\n\r\n\r\n    this.props.deleteSection(data, res => {\r\n      if (res.status === 200) {\r\n        console.log('Inside response', res.data[0])\r\n        this.setState({\r\n          authFlag: true\r\n        })\r\n        // sessionStorage.setItem('email', res.data[0].email)\r\n        // sessionStorage.setItem('username', res.data[0].username)\r\n        // sessionStorage.setItem('cookie', res.data[0].type) // cookies.save('cookie', res.data[0].type, {maxAge: 900000, httpOnly: false, path: '/'}); // cookies.save('userid', res.data[0]._id, {maxAge: 900000, httpOnly: false, path: '/'}); // cookies.save('username', res.data[0].username, {maxAge: 900000, httpOnly: false, path: '/'});\r\n        // this.props.history.push('/home')\r\n        window.location.reload();\r\n      } else {\r\n        alert('Please enter valid credentials')\r\n      }\r\n    })\r\n  }\r\n\r\n  render () {\r\n    // redirect based on successful login\r\n    let redirectVar = null\r\n    let invalidtag = null\r\n    let menulist = null\r\n    let resturantslist = null\r\n    let displayCart = null\r\n\r\n    if (sessionStorage.getItem('checkout') !== 'new') {\r\n      displayCart = (\r\n        <Cart data={JSON.parse(sessionStorage.getItem('checkout'))} />\r\n      )\r\n    } else {\r\n      displayCart = <div>Add items to your cart</div>\r\n    }\r\n\r\n    // let list = sessionStorage.getItem('sections');\r\n    let list = this.state.sections\r\n    // console.log(\"List\", list[0]);\r\n    if (typeof list === 'undefined' && list === null) {\r\n      // console.log('Loading data')\r\n      //  window.location.reload();\r\n      resturantslist = <div>Loading data!</div>\r\n    } else {\r\n      resturantslist = Object.keys(list).map(section => {\r\n        // console.log('List',list)\r\n        return (\r\n          <div>\r\n            <h2>{list[section].section}</h2>\r\n             <button section={list[section].section} style={{float:'center'}} className='submit' onClick={this.deleteSection}>Delete Section</button>\r\n            \r\n           \r\n            <div class='list-group'>\r\n              <br/>\r\n              <OwnerSectionMenu\r\n                sections={list[section].section}\r\n                restaurant={sessionStorage.getItem('selectedRestaurant')}\r\n              />\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    if (!cookie.load('cookie')) {\r\n      redirectVar = <Redirect to='/login' />\r\n    }\r\n\r\n    if (this.state.authFailed) {\r\n      invalidtag = (\r\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\r\n      )\r\n    }\r\n    let updatePic = null\r\n\r\n    if (this.state.file !== '') {\r\n      updatePic = (\r\n        <button\r\n          style={{ marginLeft: '537px' }}\r\n          className='btn btn-link'\r\n          type='submit'\r\n        >\r\n          Update\r\n        </button>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {redirectVar}\r\n        <div className='row'>\r\n          <div className='col-sm-2'>\r\n            <DisplayOwnerNav />\r\n          </div>\r\n          <div className='col-sm-10'>\r\n            <div class='container'>\r\n              <div class='login-form'>\r\n                <div className='row'>\r\n                </div>\r\n                \r\n              </div>\r\n              {resturantslist}\r\n            </div>\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps (state) {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\n// export default connect( mapStateToProps , {getProfile: getProfile, getUserImage:getUserImage})(Search);\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getrestaurantsections, getSectionsMenu, deleteSection }\r\n)(\r\n  reduxForm({\r\n    form: 'streamSearch'\r\n    // validate: validate\r\n  })(OwnerRestaurantMenu)\r\n)\r\n"]},"metadata":{},"sourceType":"module"}