{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab 2/grubhub/Frontend/src/components/Existingusersignin.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { loginuser } from '../actions';\nimport { Field, reduxForm } from 'redux-form';\nimport { connect } from 'react-redux'; // Define a Login Component\n\nclass Existingusersignin extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        htmlFor: \"email\",\n        style: {\n          color: '#6b6b83'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, label), React.createElement(\"div\", {\n        class: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", Object.assign({\n        class: \"form-control\"\n      }, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })), this.renderError(meta)));\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      authFlag: false,\n      authFailed: false\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false,\n      authFailed: false\n    });\n  }\n\n  onSubmit(values) {\n    this.props.loginuser(values);\n  }\n\n  render() {\n    var errBlock = \"\";\n    var red;\n    var redirectVar;\n    console.log(this.props.user.status);\n\n    if (sessionStorage.getItem(\"JWT\") != null) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    }\n\n    this.props.user.status == 201 ? errBlock = React.createElement(\"div\", {\n      className: \"login-err\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      style: {\n        color: \"white\",\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Username or password incorrect\")) : null; // this.props.user.status == 202 ? errBlock = <div className=\"login-err\">\n    //   <h4 style={{ color: \"white\", textAlign: \"center\" }}>No user found, sign up</h4>\n    // </div> : null;\n\n    red = this.props.traveller.status == 200 && sessionStorage.getItem(\"JWT\") != null || undefined ? React.createElement(Redirect, {\n      to: \"/TravellerHomepage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }) : null;\n    const handleSubmit = this.props.handleSubmit;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, redirectVar, red, React.createElement(\"div\", {\n      id: \"login-container\",\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Navbarwhite, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"panel-heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Log in to HomeAway\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Need an account ? \"), React.createElement(Link, {\n      to: \"/TravellerSignUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Sign up\")), React.createElement(\"div\", {\n      className: \"form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"login-form  traveler\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"heading1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"heading\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"Account login\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), errBlock, React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit.bind(this)),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Field, {\n      label: \"Email\",\n      name: \"email\",\n      type: \"email\",\n      component: this.renderField // this funtion will return jsx for the field. \n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Field, {\n      label: \"Password\",\n      name: \"password\",\n      type: \"password\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"loginbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"div\", {\n      className: \"heading1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"checkbox mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"remember-me\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), \" Keep me signed in\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"fbbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"  Log in with Facebook \")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"googlebutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" Log in with Google \")), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })))));\n  }\n\n} //   onSubmit = e => {\n//     console.log('OnSubmit' + e)\n//     let data = {\n//       email: e.email,\n//       password:e.password\n//     }\n//     axios.defaults.withCredentials = true\n//     this.props.loginuser(data, response => {\n//       if (response.status === 200) {\n//         this.setState({\n//           authFlag: true\n//         })\n//         // sessionStorage.setItem('email', response.data[0].email);\n//         this.props.history.push(\"/home\");\n//       } else {\n//         alert('Please enter valid credentials');\n//       }\n//     })\n//   }\n//   inputChangeHandler = e => {\n//     this.setState({\n//       [e.target.name]: e.target.value\n//     })\n//   }\n//   render() {\n//     let redirectVar = null\n//     let invalidtag = null\n//     // if (!cookie.load('cookie')) {\n//     //   redirectVar = <Redirect to='/login' />\n//     // }\n//     let redirecthome = null\n//     if (this.state.authFlag) {\n//       redirecthome = <Redirect to='/home' />\n//     }\n//     if (this.state.authFailed) {\n//       invalidtag = (\n//         <label style={{ color: 'red' }}>*Invalid user name password!</label>\n//       )\n//     }\n//     return (\n//       <form\n//         className='ui form error'\n//         onSubmit={this.props.handleSubmit(this.onSubmit)}\n//       >\n//         <div>\n//           {redirectVar}\n//           {redirecthome}\n//           <div class='container'>\n//             <div class='login-form'>\n//               <div class='main-div'>\n//                 <div class='panel'>\n//                   <h2>Sign in with your Grubhub account</h2>\n//                   {invalidtag}\n//                 </div>\n//                 <Field\n//                   name='email'\n//                   component={this.renderInput}\n//                   label='Email'\n//                 />\n//                 <br />\n//                 <Field\n//                   name='password'\n//                   type='password'\n//                   component={this.renderInput}\n//                   label='Password'\n//                 />\n//                 <br />\n//                 <button style={{backgroundColor:\"red\"}} type='submit' class='btn btn-primary'>\n//                   Login\n//                 </button>\n//                 <br />\n//                 <div class='form-group'>\n//                   <div style={{ textAlign: 'center' }}>or</div>\n//                 </div>\n//                 <button type='submit' class='btn btn-primary'>Continue with Facebook</button>\n//                   <br></br><br />\n//                 <button class=\"btn btn-primary\">Continue with Google</button>\n//                 <br></br>\n//                 <br></br>\n//                 <div style={{ textAlign: 'center' }} class='form-group'>\n//                   <Link to='/signup'>Create an account</Link>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </form>\n//     )\n//   }\n// }\n\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.email) {\n    error.email = 'Enter a valid email';\n  }\n\n  if (!formValues.password) {\n    error.password = 'Enter a valid Password';\n  }\n\n  return error;\n}; // export default connect(null,{loginuser:loginuser})(formWrapped)\n\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loginuser\n})(reduxForm({\n  form: 'streamLogin',\n  validate: validate\n})(Existingusersignin));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab 2/grubhub/Frontend/src/components/Existingusersignin.js"],"names":["React","Component","axios","cookie","Redirect","Link","loginuser","Field","reduxForm","connect","Existingusersignin","constructor","props","renderError","error","touched","color","renderInput","input","label","meta","state","email","password","authFlag","authFailed","componentWillMount","setState","onSubmit","values","render","errBlock","red","redirectVar","console","log","user","status","sessionStorage","getItem","textAlign","traveller","undefined","handleSubmit","bind","renderField","validate","formValues","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../App.css'\nimport axios from 'axios'\nimport cookie from 'react-cookies'\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { loginuser } from '../actions'\nimport { Field, reduxForm } from 'redux-form'\nimport { connect } from 'react-redux'\n// Define a Login Component\nclass Existingusersignin extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props)\n    // maintain the state required for this component\n    this.state = {\n      email: '',\n      password: '',\n      authFlag: false,\n      authFailed: false\n    }\n\n  }\n\n  componentWillMount() {\n    this.setState({\n      authFlag: false,\n      authFailed: false\n    })\n  }\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div>\n          <label style={{ color: 'red' }}>{error}</label>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    return (\n      <div>\n        <div htmlFor='email' style={{ color: '#6b6b83' }}>\n          {label}\n        </div>\n        <div class='form-group'>\n          <input class='form-control' {...input} />\n          {this.renderError(meta)}\n        </div>\n      </div>\n    )\n  }\n\n  onSubmit(values) {\n    this.props.loginuser(values);\n  }\n\n  render() {\n    var errBlock = \"\";\n    var red;\n    var redirectVar;\n    console.log(this.props.user.status)\n    if (sessionStorage.getItem(\"JWT\") != null) {\n      redirectVar = <Redirect to=\"/home\" />\n    }\n\n    this.props.user.status == 201 ? errBlock = <div className=\"login-err\">\n      <h4 style={{ color: \"white\", textAlign: \"center\" }}>Username or password incorrect</h4>\n    </div> : null;\n\n    // this.props.user.status == 202 ? errBlock = <div className=\"login-err\">\n    //   <h4 style={{ color: \"white\", textAlign: \"center\" }}>No user found, sign up</h4>\n    // </div> : null;\n\n    red = this.props.traveller.status == 200 && sessionStorage.getItem(\"JWT\") != null || undefined ? <Redirect to='/TravellerHomepage' /> : null\n    const { handleSubmit } = this.props;\n\n    return (\n      <div>\n        {redirectVar}\n        {red}\n        <div id=\"login-container\" className=\"row\" >\n          <Navbarwhite />\n\n          <div className=\"panel-heading\">\n            <h1>Log in to HomeAway</h1>\n            <span>Need an account ? </span><Link to=\"/TravellerSignUp\">Sign up</Link>\n          </div>\n          <div className=\"form-container\">\n            <div className=\"login-form  traveler\">\n              <div className=\"heading1\">\n                <p className=\"heading\">Account login</p>\n              </div><br></br>\n              {errBlock}\n\n              <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\n                <Field\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  component={this.renderField}            // this funtion will return jsx for the field. \n                />\n\n                <Field\n                  label=\"Password\"\n                  name=\"password\"\n                  type=\"password\"\n                  component={this.renderField}\n                />\n\n                <button type=\"submit\" className=\"loginbutton\">Submit</button>\n              </form>\n              <div className=\"heading1\">\n                <div className=\"checkbox mb-3\">\n                  <label>\n                    <input type=\"checkbox\" value=\"remember-me\" /> Keep me signed in\n                </label>\n                </div><br></br>\n              </div><br></br>\n              <div >\n                <button className=\"fbbutton\"  >  Log in with Facebook </button>\n              </div><br></br>\n              <div >\n                <button className=\"googlebutton\"  > Log in with Google </button>\n              </div> <br></br>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n//   onSubmit = e => {\n//     console.log('OnSubmit' + e)\n//     let data = {\n//       email: e.email,\n//       password:e.password\n//     }\n//     axios.defaults.withCredentials = true\n//     this.props.loginuser(data, response => {\n//       if (response.status === 200) {\n//         this.setState({\n//           authFlag: true\n//         })\n//         // sessionStorage.setItem('email', response.data[0].email);\n\n//         this.props.history.push(\"/home\");\n//       } else {\n//         alert('Please enter valid credentials');\n//       }\n//     })\n\n//   }\n\n//   inputChangeHandler = e => {\n//     this.setState({\n//       [e.target.name]: e.target.value\n//     })\n//   }\n\n\n//   render() {\n//     let redirectVar = null\n//     let invalidtag = null\n//     // if (!cookie.load('cookie')) {\n//     //   redirectVar = <Redirect to='/login' />\n//     // }\n//     let redirecthome = null\n//     if (this.state.authFlag) {\n//       redirecthome = <Redirect to='/home' />\n//     }\n//     if (this.state.authFailed) {\n//       invalidtag = (\n//         <label style={{ color: 'red' }}>*Invalid user name password!</label>\n//       )\n//     }\n\n//     return (\n//       <form\n//         className='ui form error'\n//         onSubmit={this.props.handleSubmit(this.onSubmit)}\n//       >\n//         <div>\n//           {redirectVar}\n//           {redirecthome}\n//           <div class='container'>\n//             <div class='login-form'>\n//               <div class='main-div'>\n//                 <div class='panel'>\n//                   <h2>Sign in with your Grubhub account</h2>\n//                   {invalidtag}\n//                 </div>\n//                 <Field\n//                   name='email'\n//                   component={this.renderInput}\n//                   label='Email'\n//                 />\n//                 <br />\n//                 <Field\n//                   name='password'\n//                   type='password'\n//                   component={this.renderInput}\n//                   label='Password'\n//                 />\n//                 <br />\n//                 <button style={{backgroundColor:\"red\"}} type='submit' class='btn btn-primary'>\n//                   Login\n//                 </button>\n//                 <br />\n\n//                 <div class='form-group'>\n//                   <div style={{ textAlign: 'center' }}>or</div>\n//                 </div>\n\n\n//                 <button type='submit' class='btn btn-primary'>Continue with Facebook</button>\n//                   <br></br><br />\n\n//                 <button class=\"btn btn-primary\">Continue with Google</button>\n//                 <br></br>\n//                 <br></br>\n\n\n//                 <div style={{ textAlign: 'center' }} class='form-group'>\n//                   <Link to='/signup'>Create an account</Link>\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </form>\n//     )\n//   }\n// }\n\nconst validate = formValues => {\n  const error = {}\n  if (!formValues.email) {\n    error.email = 'Enter a valid email'\n  }\n  if (!formValues.password) {\n    error.password = 'Enter a valid Password'\n  }\n  return error\n}\n\n\n// export default connect(null,{loginuser:loginuser})(formWrapped)\nconst mapStateToProps = state => {\n  return { user: state.user }\n}\n\nexport default connect(\n  mapStateToProps,\n  { loginuser }\n)(\n  reduxForm({\n    form: 'streamLogin',\n    validate: validate\n  })(Existingusersignin)\n)\n\n"]},"metadata":{},"sourceType":"module"}