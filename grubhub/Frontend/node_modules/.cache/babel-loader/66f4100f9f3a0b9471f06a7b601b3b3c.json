{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Home/Home.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport './Home.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport eat from '../../eat.png';\nimport { Field, reduxForm } from 'redux-form';\nimport { searchrestaurants } from '../../actions';\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = formValues => {\n      // console.log('OnSubmit: ' + formValues)\n      let data = {\n        restaurant_zipcode: formValues.zipcode,\n        dish_name: formValues.dish\n      };\n      axios.defaults.withCredentials = true;\n      this.props.searchrestaurants({\n        params: data\n      }, response => {\n        // console.log('search test: ' + this.props.user[0].restaurant_name)\n        let data = response.data.map(restaurant => {\n          return restaurant.restaurant_name;\n        });\n\n        if (!this.props.user) {\n          console.log('No records found ' + this.props.user[0]);\n        } else {\n          console.log(this.props.user);\n          sessionStorage.setItem('restaurants', data);\n          this.props.history.push('/search');\n        }\n      });\n    };\n\n    this.renderInput = ({\n      input,\n      placeholder,\n      meta\n    }) => {\n      return (// <div class=\"form-home-group\">\n        React.createElement(\"div\", {\n          className: \"form-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(\"input\", Object.assign({\n          class: \"form-input-control\"\n        }, input, {\n          placeholder: placeholder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }))) // </div>\n\n      );\n    };\n\n    this.state = {\n      books: []\n    };\n  } // get the books data from backend\n\n\n  componentDidMount() {\n    let temp = sessionStorage.getItem('email'); // let data = { email: temp }\n    // console.log('Inside will mount: data value is: ' + data.email)  \n  }\n\n  render() {\n    // iterate over books to create a table row\n    // if not logged in go to login page\n    let redirectVar = null;\n\n    if (!cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"overlay\",\n      style: {\n        backgroundImage: \"url(\".concat(eat, \")\"),\n        height: \"50%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"h1\", {\n      className: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"Who\\xA0delivers\\xA0in\\xA0your\\xA0neighborhood?\")), React.createElement(\"form\", {\n      class: \"form-inline\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"form-home-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"zipcode\",\n      id: \"zipcode\",\n      component: this.renderInput,\n      placeholder: \"Zipcode\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"dish\",\n      id: \"search\",\n      component: this.renderInput,\n      placeholder: \"Pizza, sushi, chinese\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Find food\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nexport default connect(mapStateToProps, {\n  searchrestaurants\n})(reduxForm({\n  form: 'streamHome' // validate: validate\n\n})(Home));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Home/Home.js"],"names":["React","Component","axios","cookie","Redirect","Link","eat","Field","reduxForm","searchrestaurants","connect","Home","constructor","onSubmit","formValues","data","restaurant_zipcode","zipcode","dish_name","dish","defaults","withCredentials","props","params","response","map","restaurant","restaurant_name","user","console","log","sessionStorage","setItem","history","push","renderInput","input","placeholder","meta","state","books","componentDidMount","temp","getItem","render","redirectVar","load","backgroundImage","height","handleSubmit","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../../App.css'\r\nimport './Home.css'\r\nimport axios from 'axios'\r\nimport cookie from 'react-cookies'\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport eat from '../../eat.png'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { searchrestaurants } from '../../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Home extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      books: []\r\n    }\r\n  }\r\n  // get the books data from backend\r\n  componentDidMount () {\r\n    let temp = sessionStorage.getItem('email')\r\n    // let data = { email: temp }\r\n    // console.log('Inside will mount: data value is: ' + data.email)  \r\n  }\r\n\r\n  onSubmit = (formValues) => {\r\n    // console.log('OnSubmit: ' + formValues)\r\n    let data = {\r\n      restaurant_zipcode: formValues.zipcode,\r\n      dish_name: formValues.dish\r\n    }\r\n    \r\n  axios.defaults.withCredentials = true\r\n\r\n  this.props.searchrestaurants({ params: data }, (response)=>{\r\n    // console.log('search test: ' + this.props.user[0].restaurant_name)\r\n\r\n    let data= response.data.map((restaurant)=>{\r\n      return restaurant.restaurant_name\r\n\r\n    })\r\n    \r\n    if(!this.props.user){\r\n      console.log('No records found ' + this.props.user[0])\r\n    }else{\r\n      console.log(this.props.user);\r\n\r\n      sessionStorage.setItem('restaurants',data);\r\n      this.props.history.push('/search');\r\n    }\r\n  });\r\n  }\r\n\r\n\r\n\r\n  renderInput = ({ input, placeholder, meta }) => {\r\n    return (\r\n      // <div class=\"form-home-group\">\r\n          <div className='form-group'>\r\n            {/* <div htmlFor='email' style={{ color: '#6b6b83' }}>\r\n              {label}\r\n            </div> */}\r\n            {/* <input type=\"number\" id=\"zipcode\" class=\"form-input-control\" placeholder='Zipcode' /> */}\r\n            <input class=\"form-input-control\" {...input} placeholder={placeholder} />\r\n            {/* {this.renderError(meta)} */}\r\n          </div>\r\n      // </div>\r\n    )\r\n  }\r\n\r\n  render () {\r\n    // iterate over books to create a table row\r\n\r\n    // if not logged in go to login page\r\n    let redirectVar = null\r\n    if (!cookie.load('cookie')) {\r\n      redirectVar = <Redirect to='/login' />\r\n    }\r\n    return (\r\n  <div>\r\n      <div  className='overlay'\r\n        style={{ backgroundImage: `url(${eat})` , height: \"50%\"}}>\r\n           \r\n              {/* <div class='main-div'> */}\r\n      \r\n        {redirectVar}\r\n        <h1 className='title'>\r\n              <span>Who delivers in your neighborhood?</span>\r\n            </h1>  \r\n            {/* <div className='login-form'> */}\r\n            <form class=\"form-inline\" onSubmit={this.props.handleSubmit(this.onSubmit)}>\r\n               <div class=\"form-home-group\">\r\n                 <div className='form-group'>\r\n                  <Field name=\"zipcode\" id=\"zipcode\"  component={this.renderInput} placeholder='Zipcode' />\r\n                  <Field name=\"dish\" id=\"search\" component={this.renderInput} placeholder='Pizza, sushi, chinese' />\r\n                  <button className='btn btn-primary'>Find food</button>\r\n                  </div>\r\n                  </div>\r\n              </form>\r\n              {/* </div> */}\r\n       </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return { user: state.user }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { searchrestaurants }\r\n)(\r\n  reduxForm({\r\n    form: 'streamHome',\r\n    // validate: validate\r\n  })(Home)\r\n)\r\n"]},"metadata":{},"sourceType":"module"}