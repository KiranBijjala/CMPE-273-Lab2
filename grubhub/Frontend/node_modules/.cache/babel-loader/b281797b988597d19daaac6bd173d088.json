{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2 Final/grubhub/Frontend/src/components/Buyerprofile.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport '../css/Buyerprofile.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport '../css/new.css';\nimport { getProfile } from '../actions';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport NavBar from './NavBar.js';\nimport { getUserImage } from '../actions';\nimport BuyerOwnerNav from './Display/BuyerOwnerNav';\nconst ROOT_URL = \"http://localhost:3001\"; //Define a Login Component\n\nclass Buyerprofile extends Component {\n  //call the constructor method\n  constructor(props) {\n    //Call the constrictor of Super class i.e The Component\n    super(props); //maintain the state required for this component\n\n    this.update = e => {\n      const data = {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: sessionStorage.getItem('email'),\n        phone: this.state.phone,\n        password: this.state.password // path:this.state.path\n\n      };\n      console.log(data); //set the with credentials to true\n\n      axios.defaults.withCredentials = true; //make a post request with the user data\n\n      axios.post(\"\".concat(ROOT_URL, \"/update\"), data).then(response => {\n        console.log(\"Status Code  is : \", response.status);\n        console.log(response.data);\n\n        if (response.status === 200) {\n          this.setState({\n            first_name: response.data.first_name,\n            last_name: response.data.last_name,\n            password: response.data.password,\n            // email: response.data[0].email,\n            phone: response.data.phone\n          });\n          alert(\"Profile Update Succefully\");\n        } else {\n          console.log('Change failed !!! ');\n        } // this.props.loginuser(data);\n\n      });\n    };\n\n    this.imageChangeHandler = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.uploadImage = e => {\n      e.preventDefault();\n      console.log(this.state.file);\n      const formData = new FormData();\n      let email = sessionStorage.getItem('email');\n      formData.append('myImage', this.state.file, email);\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      axios.post('/userprofile', formData, config).then(response => {\n        let data = {\n          'email': email\n        };\n        axios.post(\"\".concat(ROOT_URL, \"/userimage\"), data).then(response => {\n          console.log('Axios get:', response.data);\n          this.setState({\n            profilepic: 'data:image/png;base64, ' + response.data\n          });\n        });\n      }).catch(error => {});\n    };\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = e => {\n      console.log(\"in submit profile\");\n      const data = {\n        first_name: this.state.first_name,\n        last_name: this.state.last_name,\n        email: this.state.email,\n        password: this.state.password,\n        phone: this.state.phone,\n        path: this.state.path\n      };\n      console.log(\"in submit profile  data:\" + data);\n      this.props.getProfile(data, res => {\n        console.log(\"update profile\", res.data);\n\n        if (res.status === 200) {\n          console.log(res.data[0]); // sessionStorage.setItem('Email', res.data[0].Email);\n          // this.props.history.push('/login');\n        }\n      });\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        htmlFor: \"email\",\n        style: {\n          color: 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({\n        className: \"form-control\"\n      }, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (touched && error) {\n        return React.createElement(\"label\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, error);\n      }\n    };\n\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      profilepic: '',\n      email: \"\",\n      password: \"\",\n      authFlag: false,\n      failuser: false,\n      selectedFile: null,\n      phone: '',\n      newEmail: '' // path: ''\n\n    };\n  } //Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    let path = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/public/profile/Avatar.png';\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      profilepic: ''\n    });\n    let temp = sessionStorage.getItem('email');\n    let data = {\n      email: temp\n    };\n    console.log(data.email);\n    this.props.getProfile({\n      params: data\n    }, response => {\n      console.log(this.props.user); // let img = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/public/profile/'+response.data.image\n      // console.log(img);\n\n      console.log(response.data);\n      this.setState({\n        email: response.data.email,\n        phone: response.data.phone,\n        password: response.data.password,\n        first_name: response.data.first_name,\n        last_name: response.data.last_name // profilepic:data.data.image,\n        // profilepic: img\n\n      });\n    });\n    axios.post(\"\".concat(ROOT_URL, \"/userimage\"), data).then(response => {\n      // console.log('Axios get:', response.data)\n      this.setState({\n        profilepic: 'data:image/png;base64, ' + response.data\n      });\n    });\n  }\n\n  render() {\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        className: \"btn btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Update\");\n    } //redirect based on successful login\n    // let createlogin = null;\n    // if (!cookie.load('cookie')) {\n    //     createlogin = <Redirect to=\"/login\" />\n    // }\n\n\n    let redirectVar = null;\n\n    if (sessionStorage.getItem('JWT' === null)) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      });\n    }\n\n    let createlogin = null;\n\n    if (this.state.authFlag) {\n      createlogin = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, createlogin, redirectVar, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(BuyerOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"column-change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      style: {\n        fontWeight: \"bold\",\n        color: \"black\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250\n      },\n      __self: this\n    }, \"Your account\")), React.createElement(\"form\", {\n      onSubmit: this.uploadImage,\n      enctype: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.profilepic,\n      width: \"300\",\n      height: \"300\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.imageChangeHandler,\n      name: \"myImage\",\n      id: \"myImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    })), React.createElement(\"span\", {\n      class: \"Error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }), updatePic), React.createElement(\"div\", {\n      className: \"editname\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    }, \"Edit account\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: '18px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, \"First name: \", this.props.user.first_name), React.createElement(\"div\", {\n      className: \"boxwidth-change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.inputChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      name: \"first_name\",\n      placeholder: \"Edit first name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: '18px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Last name: \", this.props.user.last_name, \" \"), React.createElement(\"div\", {\n      className: \"boxwidth-change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.inputChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      autoFocus: true,\n      name: \"last_name\",\n      placeholder: \"Edit Last name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: '18px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291\n      },\n      __self: this\n    }, \"Current password : ***** \"), React.createElement(\"div\", {\n      className: \"boxwidth-change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.inputChangeHandler,\n      type: \"password\",\n      placeholder: \"Edit Password\",\n      class: \"form-control\",\n      name: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        fontWeight: 'bold',\n        fontSize: '18px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, \"Current Phone: \", this.props.user.phone), React.createElement(\"div\", {\n      className: \"boxwidth-change\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.inputChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      name: \"phone\",\n      placeholder: \"Edit Phone\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"wrapperbutton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"button-edit\",\n      onClick: this.update,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"update\"))))))));\n  }\n\n}\n\nconst validate = formValues => {\n  const error = {}; // Validate the inputs from 'values'\n\n  if (!formValues.firstname) {\n    error.first_name = \"Enter valid first_name\";\n  }\n\n  if (!formValues.lastname) {\n    error.last_name = \"Enter valid lastname\";\n  }\n\n  if (!formValues.email) {\n    error.email = \"Enter valid email\";\n  }\n\n  if (!formValues.phone) {\n    error.phone = \"Enter valid phone\";\n  }\n\n  if (!formValues.password) {\n    error.password = \"Enter valid password\";\n  } // If errors is empty, the form is fine to submit\n  // If errors has *any* properties, redux form assumes form is invalid\n\n\n  return error;\n};\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getProfile: getProfile,\n  getUserImage: getUserImage\n})(Buyerprofile);","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2 Final/grubhub/Frontend/src/components/Buyerprofile.js"],"names":["React","Component","axios","cookie","Redirect","Link","getProfile","connect","Field","reduxForm","NavBar","getUserImage","BuyerOwnerNav","ROOT_URL","Buyerprofile","constructor","props","update","e","data","first_name","state","last_name","email","sessionStorage","getItem","phone","password","console","log","defaults","withCredentials","post","then","response","status","setState","alert","imageChangeHandler","file","target","files","uploadImage","preventDefault","formData","FormData","append","config","headers","profilepic","catch","error","inputChangeHandler","name","value","onSubmit","path","res","renderInput","input","label","meta","color","renderError","touched","authFlag","failuser","selectedFile","newEmail","componentWillMount","authFailed","temp","params","user","render","updatePic","redirectVar","createlogin","fontWeight","fontSize","validate","formValues","firstname","lastname","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../App.css';\nimport '../css/Buyerprofile.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport '../css/new.css';\nimport { getProfile } from '../actions'\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport NavBar from './NavBar.js';\nimport { getUserImage } from '../actions'\nimport BuyerOwnerNav from './Display/BuyerOwnerNav'\nconst ROOT_URL = \"http://localhost:3001\";\n//Define a Login Component\nclass Buyerprofile extends Component {\n    //call the constructor method\n    constructor(props) {\n        //Call the constrictor of Super class i.e The Component\n        super(props);\n        //maintain the state required for this component\n        this.state = {\n            first_name: \"\",\n            last_name: \"\",\n            profilepic: '',\n            email: \"\",\n            password: \"\",\n            authFlag: false,\n            failuser: false,\n            selectedFile: null,\n            phone: '',\n            newEmail: '',\n            // path: ''\n        }\n    }\n\n    //Call the Will Mount to set the auth Flag to false\n\n    componentWillMount() {\n\n        let path = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/public/profile/Avatar.png';\n\n        this.setState({\n            authFlag: false,\n            authFailed: false,\n            profilepic: '',\n            \n        })\n\n        let temp = sessionStorage.getItem('email')\n\n        let data = { email: temp }\n        console.log(data.email)\n\n        this.props.getProfile({ params: data }, (response) => {\n            console.log(this.props.user)\n            // let img = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/public/profile/'+response.data.image\n            // console.log(img);\n            console.log(response.data);\n            this.setState({\n                email: response.data.email,\n                phone: response.data.phone,\n                password: response.data.password,\n                first_name: response.data.first_name,\n                last_name: response.data.last_name,\n                // profilepic:data.data.image,\n                // profilepic: img\n\n            })\n            \n        });\n\n        axios.post(`${ROOT_URL}/userimage`, data).then(response => {\n                    // console.log('Axios get:', response.data)\n                    this.setState({\n                        profilepic: 'data:image/png;base64, ' + response.data\n\n                    })\n                })\n                \n}\n\n    update = (e) => {\n        const data = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: sessionStorage.getItem('email'),\n            phone: this.state.phone,\n            password: this.state.password,\n            // path:this.state.path\n        }\n        console.log(data);\n        //set the with credentials to true\n        axios.defaults.withCredentials = true;\n        //make a post request with the user data\n        axios.post(`${ROOT_URL}/update`, data)\n            .then(response => {\n                console.log(\"Status Code  is : \", response.status);\n                console.log(response.data);\n                if (response.status === 200) {\n                    this.setState({\n                        first_name: response.data.first_name,\n                        last_name: response.data.last_name,\n                        password: response.data.password,\n                        // email: response.data[0].email,\n                        phone: response.data.phone\n\n\n                    });\n                    alert(\"Profile Update Succefully\");\n                } else {\n                    console.log('Change failed !!! ');\n\n                }\n                // this.props.loginuser(data);\n            });\n           \n    }\n    imageChangeHandler = e => {\n        this.setState({\n            file: e.target.files[0]\n        })\n    }\n\n    uploadImage = e => {\n        e.preventDefault()\n        console.log(this.state.file);\n        const formData = new FormData()\n\n        let email = sessionStorage.getItem('email')\n        formData.append('myImage', this.state.file, email)\n        \n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        axios\n            .post('/userprofile', formData, config)\n            .then(response => {\n                let data = { 'email': email }\n                axios.post(`${ROOT_URL}/userimage`, data).then(response => {\n                    console.log('Axios get:', response.data)\n                    this.setState({\n                        profilepic: 'data:image/png;base64, ' + response.data\n                    })\n                })\n                \n            })\n            .catch(error => { })\n    }\n\n\n\n    inputChangeHandler = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    }\n\n    \n    onSubmit = (e) => {\n        console.log(\"in submit profile\");\n        const data = {\n            first_name: this.state.first_name,\n            last_name: this.state.last_name,\n            email: this.state.email,\n            password: this.state.password,\n            phone: this.state.phone,\n            path :this.state.path\n        }\n        console.log(\"in submit profile  data:\" + data);\n        this.props.getProfile(data\n            , (res) => {\n                console.log(\"update profile\", res.data);\n                if (res.status === 200) {\n                    console.log(res.data[0]);\n                    // sessionStorage.setItem('Email', res.data[0].Email);\n                    // this.props.history.push('/login');\n                }\n            })\n    }\n\n    renderInput = ({ input, label, meta }) => {\n        return (<div>\n            <div htmlFor='email' style={{ color: 'black' }}>\n                {label}\n            </div>\n            <input className=\"form-control\" {...input} />\n            {this.renderError(meta)}\n        </div>);\n    }\n\n    renderError = ({ error, touched }) => {\n        if (touched && error) {\n            return (<label style={{ color: 'red' }}>{error}</label>)\n        }\n\n\n    }\n\n\n    render() {\n        let updatePic = null\n\n        if (this.state.file !== '') {\n            updatePic = (\n                <button\n                    className='btn btn-link'\n                    type='submit'\n                >\n                    Update\n        </button>\n            )\n        }\n        //redirect based on successful login\n        // let createlogin = null;\n\n        // if (!cookie.load('cookie')) {\n        //     createlogin = <Redirect to=\"/login\" />\n        // }\n\n        let redirectVar  = null\n    if (sessionStorage.getItem('JWT' === null)){ \n      redirectVar  = <Redirect to='/login'/>\n    }\n\n\n        let createlogin = null;\n        if (this.state.authFlag) {\n            createlogin = <Redirect to=\"/login\" />\n        }\n\n        return (\n            <div>\n                {createlogin}\n                {redirectVar}\n                <div className=\"row\">\n                    <div className=\"col-sm-2\">\n                        <BuyerOwnerNav/>                       \n                         </div>\n\n                    <div className=\"col-sm-10\">\n                        <div class=\"container\">\n                            <div class=\"login-form\">\n                                <div className=\"column-change\">\n                                    {/* <div class=\"main-div\"> */}\n                                    <div class=\"panel\">\n                                        <h2 style={{ fontWeight: \"bold\", color: \"black\" }}>Your account</h2>\n                                    </div>\n\n                                    <form onSubmit={this.uploadImage} enctype='multipart/form-data'>\n                                        <div>\n                                            <img\n                                                src={this.state.profilepic}\n                                                width='300'\n                                                height='300'\n                                            />\n                                            <input\n                                                type='file'\n                                                onChange={this.imageChangeHandler}\n                                                name='myImage'\n                                                id='myImage'\n                                            />\n                                            <br />\n                                        </div>\n                                        <span class='Error' />\n                                        {updatePic}\n                                    </form>\n\n\n                                    <div className=\"editname\">\n                                        <h3>Edit account</h3><br></br>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <div style={{ fontWeight: 'bold', fontSize: '18px' }}>First name: {this.props.user.first_name}</div>\n                                        <div className=\"boxwidth-change\">\n                                            <input onChange={this.inputChangeHandler} type=\"text\" class=\"form-control\" name=\"first_name\" placeholder='Edit first name' />\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <div style={{ fontWeight: 'bold', fontSize: '18px' }}>Last name: {this.props.user.last_name} </div>\n                                        <div className=\"boxwidth-change\">\n                                            <input onChange={this.inputChangeHandler} type=\"text\" class=\"form-control\" autoFocus name=\"last_name\" placeholder='Edit Last name' />\n                                        </div>\n                                    </div>\n\n                                    <div class=\"form-group\">\n                                        <div style={{ fontWeight: 'bold', fontSize: '18px' }}>Current password : ***** </div>\n                                        <div className=\"boxwidth-change\">\n                                            <input\n                                                onChange={this.inputChangeHandler}\n                                                type=\"password\"\n                                                placeholder=\"Edit Password\"\n                                                class=\"form-control\"\n                                                name=\"password\" />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"form-group\">\n                                        <div style={{ fontWeight: 'bold', fontSize: '18px' }}>Current Phone: {this.props.user.phone}</div>\n                                        <div className=\"boxwidth-change\">\n                                            <input onChange={this.inputChangeHandler} type=\"text\" class=\"form-control\" name=\"phone\" placeholder='Edit Phone' />\n                                        </div>\n                                    </div>\n\n                                    <div className=\"wrapperbutton\">\n                                        <button type=\"submit\" className=\"button-edit\" onClick={this.update}>update</button>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n             </div >\n\n\n\n        )\n    }\n}\nconst validate = (formValues) => {\n\n    const error = {};\n\n    // Validate the inputs from 'values'\n    if (!formValues.firstname) {\n        error.first_name = \"Enter valid first_name\";\n    }\n    if (!formValues.lastname) {\n        error.last_name = \"Enter valid lastname\";\n    }\n    if (!formValues.email) {\n        error.email = \"Enter valid email\";\n    }\n    if (!formValues.phone) {\n        error.phone = \"Enter valid phone\";\n    }\n    if (!formValues.password) {\n        error.password = \"Enter valid password\";\n    }\n\n    // If errors is empty, the form is fine to submit\n    // If errors has *any* properties, redux form assumes form is invalid\n    return error;\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n      user: state.user\n    };\n  }\n  \n  export default connect( mapStateToProps , {getProfile: getProfile, getUserImage:getUserImage})(Buyerprofile);"]},"metadata":{},"sourceType":"module"}