{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Menu/Menu.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport './Menu.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getProfile } from '../../actions/index';\nimport { loginuser } from '../../actions/index';\nimport { restaurantmenu } from '../../actions/index';\nimport { getUserImage } from '../../actions/index';\nimport { connect } from 'react-redux';\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav';\nimport { Field, reduxForm } from 'redux-form'; // Define a Login Component\n\nclass Menu extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.imageChangeHandler = e => {\n      // console.log('image change handle name: ' + e.target.name)\n      // console.log('image change handle value: ' + e.target.files[0])\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.uploadImage = e => {\n      e.preventDefault(); // var headers = new Headers();\n\n      const formData = new FormData(); // console.log(this.state.file.name)\n\n      let email = sessionStorage.getItem('email'); // this.setState({file.name:email})\n      // var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n\n      formData.append('myImage', this.state.file, email); // formData.append('myImage', this.state.file, email )\n      // formData.append('email', email)\n\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      axios.post('/menuimage', formData, config).then(response => {\n        window.location.reload();\n        console.log('The file is successfully uploaded');\n      }).catch(error => {}); // prevent page from refresh\n    };\n\n    this.onSubmit = formValues => {\n      // console.log('OnSubmit' + formValues)\n      // if (this.state.file !== '') {\n      //   this.uploadImage()\n      // }\n      let val = JSON.parse(sessionStorage.getItem('ownerdata'));\n      console.log(val[0]);\n      console.log(val[0].restaurant_name);\n      let a = val[0];\n      let data = {\n        dish_name: formValues.dish_name,\n        description: formValues.description,\n        price: formValues.baseprice,\n        section: formValues.section,\n        restaurant_zipcode: a.restaurant_zipcode,\n        restaurant_name: a.restaurant_name\n      };\n      axios.defaults.withCredentials = true; // console.log(data) // axios //   .post('http://localhost:3001/login', data) //   .then(response => { //     console.log('Status Code : ', response.status) //     if (response.status === 200) { //       sessionStorage.setItem('email', data.email) //       this.setState({ //         authFlag: true //       }) //     } //   }) //   .catch(err => { //     this.setState({ authFailed: true }) //   })\n\n      this.props.restaurantmenu(data, res => {\n        if (res.status === 200) {\n          console.log('Inside response', res.data[0]);\n          this.setState({\n            authFlag: true\n          });\n          this.props.history.push('/ownerrestaurantmenu');\n        } else {\n          alert('Please enter valid credentials');\n        }\n      }); // ,(response)=>{ //   console.log('Redux test: ' + this.props.user); //   console.log('Redux response: ' + response); // }) // console.log(data); // this.props.login(data, (response)=>{ //   console.log('Redux test: ' + this.props.user) //   this.setState({ //     img: 'data:image/png;base64, ' + response.image //   }) // });\n    };\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        htmlFor: \"email\",\n        style: {\n          color: '#6b6b83'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({\n        className: \"form-control\",\n        style: {\n          marginRight: '10px'\n        }\n      }, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.state = {\n      email: '',\n      file: '',\n      img: '',\n      authFlag: false,\n      authFailed: false\n    }; // Bind the handlers to this class // this.usernameChangeHandler = this.usernameChangeHandler.bind(this) // this.passwordChangeHandler = this.passwordChangeHandler.bind(this) // this.submitLogin = this.submitLogin.bind(this)\n  } // Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    // let path = process.env.PUBLIC_URL\n    // path = path + '/profilepics/Biryani.png'\n    let path = '/images/profile/pizza.png';\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      nameflag: false,\n      contactflag: false,\n      img: path,\n      passwordflag: false\n    });\n    let temp = sessionStorage.getItem('email');\n    let data = {\n      email: temp\n    };\n    console.log('Inside will mount: data value is: ' + data.email); // this.props.getProfile({ params: data }, (data)=>{ //   console.log('Redu test: ' + this.props.user) //   this.setState({ //     email: data.email, //     phonenumber: data.phone, //     password: data.password, //     firstname: data.first_name, //     lastname: data.last_name //   }) // });\n\n    axios.get('http://localhost:3001/userimage', data).then(response => {\n      // update the state with the response data\n      console.log('Axios get:', response.data);\n      this.setState({\n        img: 'data:image/png;base64, ' + response.data\n      });\n    });\n  }\n\n  render() {\n    // redirect based on successful login\n    // let redirectVar = null\n    let invalidtag = null; // if (!cookie.load('cookie')) {\n    //   redirectVar = <Redirect to='/login' />\n    // }\n\n    let redirectVar = null;\n\n    if (sessionStorage.getItem('JWT' === null)) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, \"*Invalid\\xA0user\\xA0name\\xA0password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        style: {\n          marginLeft: '537px'\n        },\n        className: \"btn\\xA0btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, \"Update\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }, React.createElement(DisplayOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \"Your\\xA0account\")), React.createElement(\"form\", {\n      onSubmit: this.uploadImage,\n      enctype: \"multipart/form-data\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: this.state.img,\n      width: \"200\",\n      height: \"200\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.imageChangeHandler,\n      name: \"myImage\",\n      id: \"myImage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }))), React.createElement(\"form\", {\n      className: \"ui\\xA0form\\xA0error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"Error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256\n      },\n      __self: this\n    }), updatePic, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Add Items\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263\n      },\n      __self: this\n    }, React.createElement(Field, {\n      class: \"form-control\",\n      name: \"dish_name\",\n      component: this.renderInput,\n      label: \" Dish Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"description\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Item Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"section\",\n      component: this.renderInput,\n      label: \"Section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"baseprice\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294\n      },\n      __self: this\n    }, \"Add to Menu\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    })))))))) //   </div>\n    // </div>\n    //       </div>\n    ;\n  }\n\n} // export Login Component\n// export default BuyerProfile\n\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.dishname) {\n    error.dishname = 'Enter a valid dish name';\n  }\n\n  if (!formValues.description) {\n    error.description = 'Enter a valid description';\n  }\n\n  if (!formValues.baseprice) {\n    error.baseprice = 'Enter a valid baseprice';\n  }\n\n  if (!formValues.section) {\n    error.section = 'Enter a valid section';\n  }\n\n  return error;\n};\n\nconst mapStateToProps = state => {\n  return {\n    owner: state.owner\n  };\n};\n\nexport default connect(mapStateToProps, {\n  restaurantmenu: restaurantmenu\n})(reduxForm({\n  form: 'streamMenu',\n  validate: validate\n})(Menu));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Menu/Menu.js"],"names":["React","Component","axios","cookie","Redirect","Link","getProfile","loginuser","restaurantmenu","getUserImage","connect","DisplayOwnerNav","Field","reduxForm","Menu","constructor","props","inputChangeHandler","e","setState","target","name","value","imageChangeHandler","file","files","uploadImage","preventDefault","formData","FormData","email","sessionStorage","getItem","append","state","config","headers","post","then","response","window","location","reload","console","log","catch","error","onSubmit","formValues","val","JSON","parse","restaurant_name","a","data","dish_name","description","price","baseprice","section","restaurant_zipcode","defaults","withCredentials","res","status","authFlag","history","push","alert","renderError","touched","color","renderInput","input","label","meta","marginRight","img","authFailed","componentWillMount","path","nameflag","contactflag","passwordflag","temp","get","render","invalidtag","redirectVar","updatePic","marginLeft","handleSubmit","validate","dishname","mapStateToProps","owner","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../../App.css'\nimport './Menu.css'\nimport axios from 'axios'\nimport cookie from 'react-cookies'\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { getProfile } from '../../actions/index'\n\nimport { loginuser } from '../../actions/index'\nimport { restaurantmenu } from '../../actions/index'\nimport { getUserImage } from '../../actions/index'\nimport { connect } from 'react-redux'\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav'\nimport { Field, reduxForm } from 'redux-form'\n\n// Define a Login Component\nclass Menu extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props) // maintain the state required for this component\n    this.state = {\n      email: '',\n      file: '',\n      img: '',\n      authFlag: false,\n      authFailed: false\n    } // Bind the handlers to this class // this.usernameChangeHandler = this.usernameChangeHandler.bind(this) // this.passwordChangeHandler = this.passwordChangeHandler.bind(this) // this.submitLogin = this.submitLogin.bind(this)\n  } // Call the Will Mount to set the auth Flag to false\n  componentWillMount() {\n    // let path = process.env.PUBLIC_URL\n    // path = path + '/profilepics/Biryani.png'\n    let path = '/images/profile/pizza.png';\n\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      nameflag: false,\n      contactflag: false,\n      img: path,\n      passwordflag: false\n    })\n    let temp = sessionStorage.getItem('email')\n    let data = { email: temp }\n    console.log('Inside will mount: data value is: ' + data.email) // this.props.getProfile({ params: data }, (data)=>{ //   console.log('Redu test: ' + this.props.user) //   this.setState({ //     email: data.email, //     phonenumber: data.phone, //     password: data.password, //     firstname: data.first_name, //     lastname: data.last_name //   }) // });\n\n    axios.get('http://localhost:3001/userimage', data).then(response => {\n      // update the state with the response data\n      console.log('Axios get:', response.data)\n      this.setState({\n        img: 'data:image/png;base64, ' + response.data\n      })\n    })\n  }\n\n  inputChangeHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  imageChangeHandler = e => {\n    // console.log('image change handle name: ' + e.target.name)\n    // console.log('image change handle value: ' + e.target.files[0])\n    this.setState({\n      file: e.target.files[0]\n    })\n  } // submit Login handler to send a request to the node backend\n\n  uploadImage = e => {\n    e.preventDefault()\n    // var headers = new Headers();\n    const formData = new FormData()\n    // console.log(this.state.file.name)\n\n    let email = sessionStorage.getItem('email')\n    // this.setState({file.name:email})\n    // var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n    formData.append('myImage', this.state.file, email)\n    // formData.append('myImage', this.state.file, email )\n    // formData.append('email', email)\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }\n    axios\n      .post('/menuimage', formData, config)\n      .then(response => {\n        window.location.reload()\n        console.log('The file is successfully uploaded')\n      })\n      .catch(error => {})\n    // prevent page from refresh\n  }\n\n  // uploadImage = e => {\n  //   e.preventDefault() // var headers = new Headers();\n  //   const formData = new FormData() // console.log(this.state.file.name)\n  //   let email = sessionStorage.getItem('email') // this.setState({file.name:email}) // var imagedata = document.querySelector('input[type=\"file\"]').files[0];\n  //   formData.append('myImage', this.state.file, email) // formData.append('myImage', this.state.file, email ) // formData.append('email', email)\n  //   const config = {\n  //     headers: {\n  //       'content-type': 'multipart/form-data'\n  //     }\n  //   }\n\n    \n    // axios\n    //   .post('/menuimage', formData, config)\n    //   .then(response => {\n    //     let data = { email: email }\n    //     axios.post('http://localhost:3001/userimage', data).then(response => {\n    //       // update the state with the response data\n    //       console.log('Axios get:', response.data)\n    //       this.setState({\n    //         img: 'data:image/png;base64, ' + response.data\n    //       })\n    //     })\n    //     console.log('The file is successfully uploaded')\n    //   })\n    //   .catch(error => { }) // prevent page from refresh\n  // }\n\n  onSubmit = formValues => {\n    // console.log('OnSubmit' + formValues)\n    // if (this.state.file !== '') {\n    //   this.uploadImage()\n    // }\n    let val = JSON.parse(sessionStorage.getItem('ownerdata'));\n    console.log(val[0]);\n    console.log(val[0].restaurant_name)\n    let a = val[0];\n    let data = {\n      dish_name: formValues.dish_name,\n      description: formValues.description,\n      price: formValues.baseprice,\n      section: formValues.section,\n      restaurant_zipcode: a.restaurant_zipcode,\n      restaurant_name: a.restaurant_name\n\n    }\n    axios.defaults.withCredentials = true // console.log(data) // axios //   .post('http://localhost:3001/login', data) //   .then(response => { //     console.log('Status Code : ', response.status) //     if (response.status === 200) { //       sessionStorage.setItem('email', data.email) //       this.setState({ //         authFlag: true //       }) //     } //   }) //   .catch(err => { //     this.setState({ authFailed: true }) //   })\n    this.props.restaurantmenu(data, res => {\n      if (res.status === 200) {\n        console.log('Inside response', res.data[0])\n        this.setState({\n          authFlag: true\n        })\n\n        this.props.history.push('/ownerrestaurantmenu')\n      } else {\n        alert('Please enter valid credentials')\n      }\n    }) // ,(response)=>{ //   console.log('Redux test: ' + this.props.user); //   console.log('Redux response: ' + response); // }) // console.log(data); // this.props.login(data, (response)=>{ //   console.log('Redux test: ' + this.props.user) //   this.setState({ //     img: 'data:image/png;base64, ' + response.image //   }) // });\n  }\n\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div>\n          <label style={{ color: 'red' }}>{error}</label>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    return (\n      <div>\n        <div htmlFor='email' style={{ color: '#6b6b83' }}>\n          {label}\n        </div>\n        <input\n          className='form-control'\n          style={{ marginRight: '10px' }}\n          {...input}\n        />\n        {this.renderError(meta)}\n      </div>\n    )\n  }\n\n  render() {\n    // redirect based on successful login\n    // let redirectVar = null\n    let invalidtag = null\n    // if (!cookie.load('cookie')) {\n    //   redirectVar = <Redirect to='/login' />\n    // }\n\n    let redirectVar = null\n    if (sessionStorage.getItem('JWT' === null)) {\n      redirectVar = <Redirect to='/login' />\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = (\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\n      )\n    }\n    let updatePic = null\n\n    if (this.state.file !== '') {\n      updatePic = (\n        <button\n          style={{ marginLeft: '537px' }}\n          className='btn btn-link'\n          type='submit'\n        >\n          Update\n        </button>\n      )\n    }\n\n    return (\n      <div>\n        {redirectVar}\n\n        <div className='row'>\n          <div className='col-sm-2'>\n            <DisplayOwnerNav />\n          </div>\n\n          <div className='col-sm-10'>\n\n            <div class='login-form'>\n\n              <div class='panel'>\n                <h2>Your account</h2>\n              </div>\n              {/* <div className='row'>\n                <div className='col-sm-6'> */}\n              <form onSubmit={this.uploadImage} enctype='multipart/form-data'>\n                <div>\n                  <img\n                    src={this.state.img}\n                    width='200'\n                    height='200'\n                  />\n                  <input\n                    type='file'\n                    onChange={this.imageChangeHandler}\n                    name='myImage'\n                    id='myImage'\n                  />\n                  <br />\n                </div>\n              </form>\n\n              <form\n                className='ui form error'\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n              >\n                <span class='Error' />\n                {updatePic}\n                <ul class='list-group'>\n                  <li class='list-group-item'>\n                    <br />\n                    <h2>Add Items</h2>\n                    <br></br>\n                    <div class='form-group'>\n                      <Field\n                        class='form-control'\n                        name='dish_name'\n                        component={this.renderInput}\n                        label=' Dish Name'\n                      />\n                    </div>\n                    <Field\n                      name='description'\n                      type='text'\n                      component={this.renderInput}\n                      label='Item Description'\n                    />\n                    <div class='form-group'>\n                      <Field\n                        name='section'\n                        component={this.renderInput}\n                        label='Section'\n                      />\n                    </div>\n                    <br />\n                    <div class='form-group'>\n                      <Field\n                        name='baseprice'\n                        type='text'\n                        component={this.renderInput}\n                        label='Price'\n                      />\n                    </div>\n                    <br />\n                    <button type='submit' class='btn btn-primary'>\n                      Add to Menu\n                        </button>\n                    <br />\n                  </li>\n                </ul>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      //   </div>\n      // </div>\n      //       </div>\n    )\n  }\n}\n// export Login Component\n// export default BuyerProfile\n\nconst validate = formValues => {\n  const error = {}\n  if (!formValues.dishname) {\n    error.dishname = 'Enter a valid dish name'\n  }\n  if (!formValues.description) {\n    error.description = 'Enter a valid description'\n  }\n  if (!formValues.baseprice) {\n    error.baseprice = 'Enter a valid baseprice'\n  }\n  if (!formValues.section) {\n    error.section = 'Enter a valid section'\n  }\n  return error\n}\n\nconst mapStateToProps = state => {\n  return { owner: state.owner }\n}\n\nexport default connect(\n  mapStateToProps,\n  { restaurantmenu: restaurantmenu }\n)(\n  reduxForm({\n    form: 'streamMenu',\n    validate: validate\n  })(Menu)\n)\n"]},"metadata":{},"sourceType":"module"}