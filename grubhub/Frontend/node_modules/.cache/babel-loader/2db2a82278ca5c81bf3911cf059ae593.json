{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Downloads/CMPE 273/Snippets/React Demo/Frontend/src/components/Create/Create.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let BookID = this.state.BookID;\n      let Bookiderror = {};\n      let formisValid = true;\n\n      if (!BookID) {\n        formisValid = false;\n        Bookiderror = \"Cannot be empty\";\n      }\n\n      contactSubmit = e => {\n        e.preventDefault();\n\n        if (this.validate()) {\n          alert(\"Form submitted\");\n        } else {\n          alert(\"Form has errors.\");\n        }\n      };\n    };\n\n    this.BookIDChangeHandler = e => {\n      this.setState({\n        BookID: e.target.value\n      });\n    };\n\n    this.TitleChangeHandler = e => {\n      this.setState({\n        Title: e.target.value\n      });\n    };\n\n    this.AuthorChangeHandler = e => {\n      this.setState({\n        Author: e.target.value\n      });\n    };\n\n    this.createBook = e => {\n      var headers = new Headers(); //prevent page from refresh\n\n      e.preventDefault();\n      const data = {\n        BookID: this.state.BookID,\n        Title: this.state.Title,\n        Author: this.state.Author\n      }; //set the with credentials to true\n\n      axios.defaults.withCredentials = true; //make a post request with the user data\n\n      axios.post('http://localhost:3001/create', data).then(response => {\n        console.log(\"Status Code : \", response.status);\n\n        if (response.status === 200) {\n          this.setState({\n            redirect: true\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          failcatch: true\n        });\n      });\n    };\n\n    this.state = {\n      BookID: \"\",\n      Title: \"\",\n      Author: \"\",\n      redirect: false,\n      failcreate: false,\n      Bookiderror: {}\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      redirect: false\n    });\n  } //username change handler to update state variable with the text entered by the user\n\n\n  render() {\n    let createlogin = null;\n\n    if (!cookie.load('cookie')) {\n      createlogin = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      });\n    }\n\n    let redirectcreate = null;\n\n    if (this.state.redirect) {\n      redirectcreate = React.createElement(Redirect, {\n        to: {\n          pathname: \"/home\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      });\n    }\n\n    let faillabelcatch = null;\n\n    if (this.state.failcatch) {\n      faillabelcatch = React.createElement(\"label\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Book Already Exists\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, createlogin, redirectcreate, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"http://127.0.0.1:3000/create\",\n      method: \"post\",\n      onSubmit: this.contactSubmit,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '30%'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: \"required\",\n      onChange: this.BookIDChangeHandler,\n      type: \"number\",\n      class: \"form-control\",\n      name: \"BookID\",\n      placeholder: \"Book ID\",\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '30%'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.TitleChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      name: \"Title\",\n      placeholder: \"Book Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '30%'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.AuthorChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      name: \"Author\",\n      placeholder: \"Book Author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '30%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.createBook,\n      class: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Create\"))), faillabelcatch));\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["/Users/kirankumarbijjala/Downloads/CMPE 273/Snippets/React Demo/Frontend/src/components/Create/Create.js"],"names":["React","Component","axios","cookie","Redirect","Create","constructor","props","validate","BookID","state","Bookiderror","formisValid","contactSubmit","e","preventDefault","alert","BookIDChangeHandler","setState","target","value","TitleChangeHandler","Title","AuthorChangeHandler","Author","createBook","headers","Headers","data","defaults","withCredentials","post","then","response","console","log","status","redirect","catch","err","failcatch","failcreate","componentWillMount","render","createlogin","load","redirectcreate","pathname","faillabelcatch","color","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies';\r\nimport {Redirect} from 'react-router';\r\n\r\n\r\nclass Create extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            BookID : \"\",\r\n            Title : \"\",\r\n            Author : \"\",\r\n            redirect : false,\r\n            failcreate:false,\r\n            Bookiderror: {}\r\n        }\r\n    }  \r\n\r\nvalidate =()=>{\r\n    let BookID = this.state.BookID;\r\n    let Bookiderror = {};\r\n    let formisValid = true;\r\n    if(!BookID){\r\n        formisValid = false;\r\n        Bookiderror = \"Cannot be empty\";\r\n    }\r\n\r\ncontactSubmit=(e)=>{\r\n    e.preventDefault();\r\n\r\n    if(this.validate()){\r\n        alert(\"Form submitted\");\r\n    }else{\r\n        alert(\"Form has errors.\")\r\n        }\r\n\r\n    }\r\n    }\r\ncomponentWillMount(){\r\n    this.setState({\r\n        redirect : false\r\n    })\r\n}\r\n//username change handler to update state variable with the text entered by the user\r\nBookIDChangeHandler = (e) => {\r\n    \r\n        this.setState({\r\n            BookID : e.target.value\r\n            })\r\n    \r\n}\r\n//password change handler to update state variable with the text entered by the user\r\nTitleChangeHandler = (e) => {\r\n    this.setState({\r\n        Title : e.target.value\r\n    })\r\n}\r\nAuthorChangeHandler = (e) => {\r\n    this.setState({\r\n        Author : e.target.value\r\n    })\r\n}\r\n\r\n//submit Login handler to send a request to the node backend\r\ncreateBook = (e) => {\r\n    var headers = new Headers();\r\n    //prevent page from refresh\r\n    e.preventDefault();\r\n    const data = {\r\n        BookID : this.state.BookID,\r\n        Title : this.state.Title,\r\n        Author : this.state.Author\r\n        \r\n    }\r\n    //set the with credentials to true\r\n    axios.defaults.withCredentials = true;\r\n    //make a post request with the user data\r\n    axios.post('http://localhost:3001/create',data)\r\n        .then(response => {\r\n            console.log(\"Status Code : \",response.status);\r\n            if(response.status === 200){\r\n                this.setState({redirect :true});\r\n            }\r\n        }).catch(err=>{\r\n            this.setState({failcatch:true})\r\n        })\r\n}\r\n    render(){\r\n        let createlogin = null;\r\n        \r\n        if(!cookie.load('cookie')){\r\n            createlogin = <Redirect to= \"/login\"/>\r\n        }\r\n        let redirectcreate = null;\r\n        if (this.state.redirect) {\r\n            redirectcreate = <Redirect to = {{ pathname: \"/home\" }} />;\r\n            }\r\n\r\n        let faillabelcatch = null;\r\n        if(this.state.failcatch){\r\n            faillabelcatch=(\r\n            <label style = {{color:\"red\"}}>Book Already Exists</label>\r\n            )\r\n        }\r\n    \r\n        return(\r\n            <div>\r\n                {createlogin}\r\n                {redirectcreate}\r\n                <br/>\r\n                <div class=\"container\">\r\n                    <form action=\"http://127.0.0.1:3000/create\" method=\"post\" onSubmit = {this.contactSubmit} noValidate>\r\n                        <div style={{width: '30%'}} class=\"form-group\">\r\n                            <input required = \"required\" onChange = {this.BookIDChangeHandler} type=\"number\" class=\"form-control\" name=\"BookID\" placeholder=\"Book ID\" noValidate/>\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width: '30%'}} class=\"form-group\">\r\n                                <input onChange = {this.TitleChangeHandler} type=\"text\" class=\"form-control\" name=\"Title\" placeholder=\"Book Title\" />\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width: '30%'}} class=\"form-group\">\r\n                                <input onChange = {this.AuthorChangeHandler} type=\"text\" class=\"form-control\" name=\"Author\" placeholder=\"Book Author\" />\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width: '30%'}}>\r\n                    <button onClick = {this.createBook} class=\"btn btn-success\" type=\"submit\">Create</button>\r\n                        </div> \r\n                    </form>\r\n                    {faillabelcatch}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create;"]},"metadata":{},"sourceType":"module"}