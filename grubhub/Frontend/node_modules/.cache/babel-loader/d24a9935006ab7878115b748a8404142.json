{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/RestaurantMenu/RestaurantMenu.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport './RestaurantMenu.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getRestaurantDetails } from '../../actions';\nimport { getrestaurantsections } from '../../actions';\nimport { getSectionsMenu } from '../../actions';\nimport { loginuser } from '../../actions';\nimport { getUserImage } from '../../actions';\nimport SectionMenu from './SectionMenu';\nimport Cart from '../Cart/Cart';\nimport { connect } from 'react-redux';\nimport BuyerOwnerNav from '../Display/BuyerOwnerNav';\nimport { Field, reduxForm } from 'redux-form'; // Define a Login Component\n\nclass RestaurantMenu extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      file: '',\n      img: '',\n      sections: '',\n      sectionArr: '',\n      restaurantimg: '',\n      restaurantnames: '',\n      restaurantdetails: '',\n      authFlag: false,\n      authFailed: false\n    };\n  } // Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    let name = sessionStorage.getItem('selectedRestaurant');\n    console.log(name);\n    let data = {\n      restaurant_name: name\n    };\n    axios.defaults.withCredentials = true;\n    this.props.getrestaurantsections({\n      params: data\n    }, response => {\n      console.log(this.props.user);\n      this.setState({\n        sections: this.props.user\n      }, () => {\n        sessionStorage.setItem('sections', this.state.sections);\n      });\n      console.log(this.props.user);\n      let v = sessionStorage.getItem('sections');\n      console.log(v);\n    });\n  }\n\n  render() {\n    // redirect based on successful login\n    let redirectVar = null;\n    let invalidtag = null;\n    let menulist = null;\n    let resturantslist = null;\n    let displayCart = null;\n\n    if (sessionStorage.getItem('checkout') !== 'new') {\n      displayCart = React.createElement(Cart, {\n        data: JSON.parse(sessionStorage.getItem('checkout')),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      });\n    } else {\n      displayCart = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Add items to your cart\");\n    }\n\n    let list = this.state.sections;\n\n    if (typeof list === 'undefined' && list === null) {\n      resturantslist = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Loading data!\");\n    } else {\n      resturantslist = Object.keys(list).map(section => {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, list[section]), React.createElement(\"div\", {\n          class: \"list-group\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(SectionMenu, {\n          sections: list[section],\n          restaurant: sessionStorage.getItem('selectedRestaurant'),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        })));\n      });\n    }\n\n    if (!cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"*Invalid user name password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        style: {\n          marginLeft: '537px'\n        },\n        className: \"btn btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Update\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(BuyerOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), resturantslist, React.createElement(\"div\", {\n      class: \"main-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Item\")), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Quantity\")), React.createElement(\"div\", {\n      className: \"col-sm-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"Price\")))), displayCart))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getrestaurantsections,\n  getSectionsMenu\n})(reduxForm({\n  form: 'streamSearch' // validate: validate\n\n})(RestaurantMenu));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/RestaurantMenu/RestaurantMenu.js"],"names":["React","Component","axios","cookie","Redirect","Link","getRestaurantDetails","getrestaurantsections","getSectionsMenu","loginuser","getUserImage","SectionMenu","Cart","connect","BuyerOwnerNav","Field","reduxForm","RestaurantMenu","constructor","props","inputChangeHandler","e","setState","target","name","value","state","file","img","sections","sectionArr","restaurantimg","restaurantnames","restaurantdetails","authFlag","authFailed","componentWillMount","sessionStorage","getItem","console","log","data","restaurant_name","defaults","withCredentials","params","response","user","setItem","v","render","redirectVar","invalidtag","menulist","resturantslist","displayCart","JSON","parse","list","Object","keys","map","section","load","color","updatePic","marginLeft","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../../App.css'\r\nimport './RestaurantMenu.css'\r\nimport axios from 'axios'\r\nimport cookie from 'react-cookies'\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { getRestaurantDetails } from '../../actions'\r\nimport { getrestaurantsections } from '../../actions'\r\nimport { getSectionsMenu } from '../../actions'\r\nimport { loginuser } from '../../actions'\r\nimport { getUserImage } from '../../actions'\r\nimport SectionMenu from './SectionMenu'\r\nimport Cart from '../Cart/Cart'\r\nimport { connect } from 'react-redux'\r\nimport BuyerOwnerNav from '../Display/BuyerOwnerNav'\r\n\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n// Define a Login Component\r\nclass RestaurantMenu extends Component {\r\n  // call the constructor method\r\n  constructor (props) {\r\n    // Call the constrictor of Super class i.e The Component\r\n    super(props)\r\n    // maintain the state required for this component\r\n    this.state = {\r\n      file: '',\r\n      img: '',\r\n      sections: '',\r\n      sectionArr: '',\r\n      restaurantimg: '',\r\n      restaurantnames: '',\r\n      restaurantdetails: '',\r\n      authFlag: false,\r\n      authFailed: false\r\n    }\r\n  }\r\n  // Call the Will Mount to set the auth Flag to false\r\n  componentWillMount () {\r\n    let name = sessionStorage.getItem('selectedRestaurant')\r\n    console.log(name);\r\n    let data = {\r\n      restaurant_name: name\r\n    }\r\n    axios.defaults.withCredentials = true\r\n\r\n    this.props.getrestaurantsections({ params: data }, response => {\r\n      console.log( this.props.user)\r\n      this.setState(\r\n        {\r\n          sections: this.props.user\r\n        },\r\n        () => {\r\n          sessionStorage.setItem('sections', this.state.sections)\r\n        }\r\n      )\r\n      console.log(this.props.user);\r\n      \r\n      let v = sessionStorage.getItem('sections');\r\n      console.log(v);\r\n    })\r\n  }\r\n\r\n  inputChangeHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  render () {\r\n    // redirect based on successful login\r\n    let redirectVar = null\r\n    let invalidtag = null\r\n    let menulist = null\r\n    let resturantslist = null\r\n    let displayCart = null\r\n\r\n    if (sessionStorage.getItem('checkout') !== 'new') {\r\n      displayCart = (\r\n        <Cart data={JSON.parse(sessionStorage.getItem('checkout'))} />\r\n      )\r\n    } else {\r\n      displayCart = <div>Add items to your cart</div>\r\n    }\r\n\r\n    let list = this.state.sections\r\n    if (typeof list === 'undefined' && list === null) {\r\n      resturantslist = <div>Loading data!</div>\r\n    } else {\r\n      resturantslist = Object.keys(list).map(section => {\r\n        return (\r\n          <div>\r\n            <h2>{list[section]}</h2>\r\n            <div class='list-group'>\r\n              <SectionMenu\r\n                sections={list[section]}\r\n                restaurant={sessionStorage.getItem('selectedRestaurant')}\r\n              />\r\n            </div>\r\n          </div>\r\n        )\r\n      })\r\n    }\r\n\r\n    if (!cookie.load('cookie')) {\r\n      redirectVar = <Redirect to='/login' />\r\n    }\r\n\r\n    if (this.state.authFailed) {\r\n      invalidtag = (\r\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\r\n      )\r\n    }\r\n    let updatePic = null\r\n\r\n    if (this.state.file !== '') {\r\n      updatePic = (\r\n        <button\r\n          style={{ marginLeft: '537px' }}\r\n          className='btn btn-link'\r\n          type='submit'\r\n        >\r\n          Update\r\n        </button>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {redirectVar}\r\n       \r\n        \r\n        <div className='row'>\r\n          <div className='col-sm-2'>\r\n            <BuyerOwnerNav />\r\n          </div>\r\n          <div className='col-sm-10'>\r\n            <div class='container'>\r\n              <div class='login-form'>\r\n                <div className='row'>\r\n                </div>\r\n                {resturantslist}\r\n                <div class='main-div'>\r\n                  <div class='panel'>\r\n\r\n                    <div className='row'>\r\n                      <div className='col-sm-4'>\r\n                        <h2>Item</h2>\r\n                      </div>\r\n                      <div className='col-sm-4'>\r\n                        <h2>Quantity</h2>\r\n                      </div>\r\n                      <div className='col-sm-4'>\r\n                        <h2>Price</h2>\r\n                      </div>\r\n                    </div>\r\n                    \r\n                  </div>\r\n                  {displayCart}\r\n                </div>\r\n                \r\n              </div>\r\n              \r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state) {\r\n  return {\r\n    user: state.user\r\n  }\r\n}\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getrestaurantsections, getSectionsMenu }\r\n)(\r\n  reduxForm({\r\n    form: 'streamSearch'\r\n    // validate: validate\r\n  })(RestaurantMenu)\r\n)\r\n"]},"metadata":{},"sourceType":"module"}