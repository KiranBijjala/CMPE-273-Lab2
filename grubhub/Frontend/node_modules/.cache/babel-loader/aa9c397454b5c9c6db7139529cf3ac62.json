{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Downloads/CMPE 273/Snippets/React Demo/Frontend/src/components/Create/Create.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.validate = () => {\n      let Bookiderror = \"\";\n\n      if (this.state.Bookid = \"\") {\n        Bookiderror = \"Book id cannot be empty\";\n      }\n\n      if (Bookiderror) {\n        this.state({\n          Bookiderror\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n\n      if (formValid(this.state.formError)) {\n        console.log(\"hi\");\n      } else {\n        console.erro(\"form Invalid\");\n      }\n    };\n\n    this.BookIDChangeHandler = e => {\n      this.setState({\n        BookID: e.target.value\n      });\n    };\n\n    this.TitleChangeHandler = e => {\n      this.setState({\n        Title: e.target.value\n      });\n    };\n\n    this.AuthorChangeHandler = e => {\n      this.setState({\n        Author: e.target.value\n      });\n    };\n\n    this.createBook = e => {\n      var headers = new Headers(); //prevent page from refresh\n\n      e.preventDefault();\n      const data = {\n        BookID: this.state.BookID,\n        Title: this.state.Title,\n        Author: this.state.Author\n      }; //set the with credentials to true\n\n      axios.defaults.withCredentials = true; //make a post request with the user data\n\n      axios.post('http://localhost:3001/create', data).then(response => {\n        console.log(\"Status Code : \", response.status);\n\n        if (response.status === 200) {\n          this.setState({\n            redirect: true\n          });\n        }\n      }).catch(err => {\n        this.setState({\n          failcatch: true\n        });\n      });\n    };\n\n    this.state = {\n      BookID: \"\",\n      Title: \"\",\n      Author: \"\",\n      redirect: false,\n      failcreate: false,\n      Bookiderror: \"\"\n    };\n  }\n\n  componentWillMount() {\n    this.setState({\n      redirect: false\n    });\n  } //username change handler to update state variable with the text entered by the user\n\n\n  render() {\n    let createlogin = null;\n\n    if (!cookie.load('cookie')) {\n      createlogin = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      });\n    }\n\n    let redirectcreate = null;\n\n    if (this.state.redirect) {\n      redirectcreate = React.createElement(Redirect, {\n        to: {\n          pathname: \"/home\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      });\n    }\n\n    let faillabelcatch = null;\n\n    if (this.state.failcatch) {\n      faillabelcatch = React.createElement(\"label\", {\n        style: {\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Book Already Exists\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, createlogin, redirectcreate, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"http://127.0.0.1:3000/create\",\n      method: \"post\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '30%'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.BookIDChangeHandler,\n      type: \"number\",\n      class: \"form-control\",\n      name: \"BookID\",\n      placeholder: \"Book ID\",\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, this.state.Bookiderror), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '30%'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.TitleChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      name: \"Title\",\n      placeholder: \"Book Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '30%'\n      },\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.AuthorChangeHandler,\n      type: \"text\",\n      class: \"form-control\",\n      name: \"Author\",\n      placeholder: \"Book Author\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        width: '30%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.createBook,\n      class: \"btn btn-success\",\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Create\"))), faillabelcatch));\n  }\n\n}\n\nexport default Create;","map":{"version":3,"sources":["/Users/kirankumarbijjala/Downloads/CMPE 273/Snippets/React Demo/Frontend/src/components/Create/Create.js"],"names":["React","Component","axios","cookie","Redirect","Create","constructor","props","validate","Bookiderror","state","Bookid","handleSubmit","e","preventDefault","formValid","formError","console","log","erro","BookIDChangeHandler","setState","BookID","target","value","TitleChangeHandler","Title","AuthorChangeHandler","Author","createBook","headers","Headers","data","defaults","withCredentials","post","then","response","status","redirect","catch","err","failcatch","failcreate","componentWillMount","render","createlogin","load","redirectcreate","pathname","faillabelcatch","color","width"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport axios from 'axios';\r\nimport cookie from 'react-cookies';\r\nimport {Redirect} from 'react-router';\r\n\r\nclass Create extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            BookID : \"\",\r\n            Title : \"\",\r\n            Author : \"\",\r\n            redirect : false,\r\n            failcreate:false,\r\n            Bookiderror: \"\"\r\n        }\r\n    }  \r\n\r\nvalidate = () =>{\r\n    let Bookiderror = \"\";\r\n\r\n    if(this.state.Bookid = \"\"){\r\n        Bookiderror = \"Book id cannot be empty\";\r\n    }\r\n    if(Bookiderror){\r\n        this.state({Bookiderror});\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nhandleSubmit = e =>{\r\n    e.preventDefault();\r\n    if(formValid(this.state.formError)){\r\n        console.log(\"hi\");\r\n    }\r\n    else{\r\n        console.erro(\"form Invalid\")\r\n    }\r\n}\r\n\r\ncomponentWillMount(){\r\n    this.setState({\r\n        redirect : false\r\n    })\r\n}\r\n//username change handler to update state variable with the text entered by the user\r\nBookIDChangeHandler = (e) => {\r\n    \r\n        this.setState({\r\n            BookID : e.target.value\r\n            })\r\n    \r\n}\r\n//password change handler to update state variable with the text entered by the user\r\nTitleChangeHandler = (e) => {\r\n    this.setState({\r\n        Title : e.target.value\r\n    })\r\n}\r\nAuthorChangeHandler = (e) => {\r\n    this.setState({\r\n        Author : e.target.value\r\n    })\r\n}\r\n\r\n\r\n\r\n//submit Login handler to send a request to the node backend\r\ncreateBook = (e) => {\r\n    var headers = new Headers();\r\n    //prevent page from refresh\r\n    e.preventDefault();\r\n    const data = {\r\n        BookID : this.state.BookID,\r\n        Title : this.state.Title,\r\n        Author : this.state.Author\r\n        \r\n    }\r\n    //set the with credentials to true\r\n    axios.defaults.withCredentials = true;\r\n    //make a post request with the user data\r\n    axios.post('http://localhost:3001/create',data)\r\n        .then(response => {\r\n            console.log(\"Status Code : \",response.status);\r\n            if(response.status === 200){\r\n                this.setState({redirect :true});\r\n            }\r\n        }).catch(err=>{\r\n            this.setState({failcatch:true})\r\n        })\r\n}\r\n    render(){\r\n        let createlogin = null;\r\n        \r\n        if(!cookie.load('cookie')){\r\n            createlogin = <Redirect to= \"/login\"/>\r\n        }\r\n        let redirectcreate = null;\r\n        if (this.state.redirect) {\r\n            redirectcreate = <Redirect to = {{ pathname: \"/home\" }} />;\r\n            }\r\n\r\n        let faillabelcatch = null;\r\n        if(this.state.failcatch){\r\n            faillabelcatch=(\r\n            <label style = {{color:\"red\"}}>Book Already Exists</label>\r\n            )\r\n        }\r\n    \r\n        return(\r\n            <div>\r\n                {createlogin}\r\n                {redirectcreate}\r\n                <br/>\r\n                <div class=\"container\">\r\n                    <form action=\"http://127.0.0.1:3000/create\" method=\"post\" onSubmit = {this.handleSubmit}>\r\n                        <div style={{width: '30%'}} class=\"form-group\">\r\n                            <input onChange = {this.BookIDChangeHandler} type=\"number\" class=\"form-control\" name=\"BookID\" placeholder=\"Book ID\" noValidate />\r\n                        </div>\r\n                        <div>\r\n                            {this.state.Bookiderror}\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width: '30%'}} class=\"form-group\">\r\n                                <input onChange = {this.TitleChangeHandler} type=\"text\" class=\"form-control\" name=\"Title\" placeholder=\"Book Title\" />\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width: '30%'}} class=\"form-group\">\r\n                                <input onChange = {this.AuthorChangeHandler} type=\"text\" class=\"form-control\" name=\"Author\" placeholder=\"Book Author\" />\r\n                        </div>\r\n                        <br/>\r\n                        <div style={{width: '30%'}}>\r\n                    <button onClick = {this.createBook} class=\"btn btn-success\" type=\"submit\">Create</button>\r\n                        </div> \r\n                    </form>\r\n                    {faillabelcatch}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Create;"]},"metadata":{},"sourceType":"module"}