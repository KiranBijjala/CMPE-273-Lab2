{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2 Final/grubhub/Frontend/src/components/Menu/Menu.js\";\nimport React, { Component } from 'react';\nimport '../../App.css';\nimport './Menu.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getProfile } from '../../actions/index';\nimport { loginuser } from '../../actions/index';\nimport { restaurantmenu } from '../../actions/index';\nimport { getUserImage } from '../../actions/index';\nimport { connect } from 'react-redux';\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav';\nimport { Field, reduxForm } from 'redux-form';\n\nvar CONST = require('../const/index');\n\nconst ROOT_URL = \"http://localhost:3001\"; // Define a Login Component\n\nclass Menu extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.imageChangeHandler = e => {\n      // console.log('image change handle name: ' + e.target.name)\n      // console.log('image change handle value: ' + e.target.files[0])\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.uploadImage = e => {\n      e.preventDefault();\n      const formData = new FormData();\n      let email = sessionStorage.getItem('email');\n      formData.append('myImage', this.state.file, email);\n      const config = {\n        headers: {\n          'content-type': 'multipart/form-data'\n        }\n      };\n      axios.post('/menu', formData, config).then(response => {\n        let data = {\n          'email': email\n        };\n        axios.post(\"\".concat(ROOT_URL, \"/menuimage\"), data).then(response => {\n          console.log('Axios get:', response.data);\n          this.setState({\n            img: 'data:image/png;base64, ' + response.data\n          });\n        });\n      }).catch(error => {});\n    };\n\n    this.onSubmit = formValues => {\n      let val = JSON.parse(sessionStorage.getItem('ownerdata'));\n      console.log(val[0]);\n      console.log(val[0].restaurant_name);\n      let a = val[0];\n      let data = {\n        dish_name: formValues.dish_name,\n        description: formValues.description,\n        price: formValues.baseprice,\n        section: formValues.section,\n        restaurant_zipcode: a.restaurant_zipcode,\n        restaurant_name: a.restaurant_name // img : a.image\n\n      };\n      axios.defaults.withCredentials = true;\n      this.props.restaurantmenu(data, res => {\n        if (res.status === 200) {\n          console.log('Inside response', res.data[0]);\n          this.setState({\n            authFlag: true\n          });\n          this.props.history.push('/ownerrestaurantmenu');\n        } else {\n          alert('Please enter valid credentials');\n        }\n      });\n    };\n\n    this.renderError = ({\n      error,\n      touched\n    }) => {\n      if (touched && error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          style: {\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, error));\n      }\n    };\n\n    this.renderInput = ({\n      input,\n      label,\n      meta\n    }) => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        htmlFor: \"email\",\n        style: {\n          color: '#6b6b83'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, label), React.createElement(\"input\", Object.assign({\n        className: \"form-control\",\n        style: {\n          marginRight: '10px'\n        }\n      }, input, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), this.renderError(meta));\n    };\n\n    this.state = {\n      email: '',\n      file: '',\n      img: '',\n      authFlag: false,\n      authFailed: false\n    };\n  }\n\n  componentWillMount() {\n    let path = '/images/profile/pizza.png';\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      nameflag: false,\n      contactflag: false,\n      img: '',\n      passwordflag: false\n    });\n    let temp = sessionStorage.getItem('email');\n    let data = {\n      email: temp\n    };\n    console.log('Inside will mount: data value is: ' + data.email); // this.props.getProfile({ params: data }, (data)=>{ //   console.log('Redu test: ' + this.props.user) //   this.setState({ //     email: data.email, //     phonenumber: data.phone, //     password: data.password, //     firstname: data.first_name, //     lastname: data.last_name //   }) // });\n  }\n\n  render() {\n    // redirect based on successful login\n    // let redirectVar = null\n    let invalidtag = null; // if (!cookie.load('cookie')) {\n    //   redirectVar = <Redirect to='/login' />\n    // }\n\n    let redirectVar = null;\n\n    if (sessionStorage.getItem('JWT' === null)) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"*Invalid\\xA0user\\xA0name\\xA0password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        style: {\n          marginLeft: '537px'\n        },\n        className: \"btn\\xA0btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Update\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(DisplayOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Your\\xA0account\")), React.createElement(\"form\", {\n      className: \"ui\\xA0form\\xA0error\",\n      onSubmit: this.props.handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      class: \"Error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }), updatePic, React.createElement(\"ul\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      class: \"list-group-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, \"Add Items\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, React.createElement(Field, {\n      class: \"form-control\",\n      name: \"dish_name\",\n      component: this.renderInput,\n      label: \" Dish Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    })), React.createElement(Field, {\n      name: \"description\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Item Description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"section\",\n      component: this.renderInput,\n      label: \"Section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"baseprice\",\n      type: \"text\",\n      component: this.renderInput,\n      label: \"Price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      class: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"Add to Menu\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    })))))))) //   </div>\n    // </div>\n    //       </div>\n    ;\n  }\n\n} // export Login Component\n// export default BuyerProfile\n\n\nconst validate = formValues => {\n  const error = {};\n\n  if (!formValues.dishname) {\n    error.dishname = 'Enter a valid dish name';\n  }\n\n  if (!formValues.description) {\n    error.description = 'Enter a valid description';\n  }\n\n  if (!formValues.baseprice) {\n    error.baseprice = 'Enter a valid baseprice';\n  }\n\n  if (!formValues.section) {\n    error.section = 'Enter a valid section';\n  }\n\n  return error;\n};\n\nconst mapStateToProps = state => {\n  return {\n    owner: state.owner\n  };\n};\n\nexport default connect(mapStateToProps, {\n  restaurantmenu: restaurantmenu\n})(reduxForm({\n  form: 'streamMenu',\n  validate: validate\n})(Menu));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2 Final/grubhub/Frontend/src/components/Menu/Menu.js"],"names":["React","Component","axios","cookie","Redirect","Link","getProfile","loginuser","restaurantmenu","getUserImage","connect","DisplayOwnerNav","Field","reduxForm","CONST","require","ROOT_URL","Menu","constructor","props","inputChangeHandler","e","setState","target","name","value","imageChangeHandler","file","files","uploadImage","preventDefault","formData","FormData","email","sessionStorage","getItem","append","state","config","headers","post","then","response","data","console","log","img","catch","error","onSubmit","formValues","val","JSON","parse","restaurant_name","a","dish_name","description","price","baseprice","section","restaurant_zipcode","defaults","withCredentials","res","status","authFlag","history","push","alert","renderError","touched","color","renderInput","input","label","meta","marginRight","authFailed","componentWillMount","path","nameflag","contactflag","passwordflag","temp","render","invalidtag","redirectVar","updatePic","marginLeft","handleSubmit","validate","dishname","mapStateToProps","owner","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport '../../App.css'\nimport './Menu.css'\nimport axios from 'axios'\nimport cookie from 'react-cookies'\nimport { Redirect } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport { getProfile } from '../../actions/index'\n\nimport { loginuser } from '../../actions/index'\nimport { restaurantmenu } from '../../actions/index'\nimport { getUserImage } from '../../actions/index'\nimport { connect } from 'react-redux'\nimport DisplayOwnerNav from '../Display/DisplayOwnerNav'\nimport { Field, reduxForm } from 'redux-form'\nvar CONST = require('../const/index');\nconst ROOT_URL = \"http://localhost:3001\";\n// Define a Login Component\nclass Menu extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props) // maintain the state required for this component\n    this.state = {\n      email: '',\n      file: '',\n      img: '',\n      authFlag: false,\n      authFailed: false\n    } \n  }\n  componentWillMount() {\n    \n    let path = '/images/profile/pizza.png';\n\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      nameflag: false,\n      contactflag: false,\n      img: '',\n      passwordflag: false\n    })\n    let temp = sessionStorage.getItem('email')\n    let data = { email: temp }\n    console.log('Inside will mount: data value is: ' + data.email) // this.props.getProfile({ params: data }, (data)=>{ //   console.log('Redu test: ' + this.props.user) //   this.setState({ //     email: data.email, //     phonenumber: data.phone, //     password: data.password, //     firstname: data.first_name, //     lastname: data.last_name //   }) // });\n\n    \n  }\n\n  inputChangeHandler = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  imageChangeHandler = e => {\n    // console.log('image change handle name: ' + e.target.name)\n    // console.log('image change handle value: ' + e.target.files[0])\n    this.setState({\n      file: e.target.files[0]\n    })\n  } // submit Login handler to send a request to the node backend\n\n  uploadImage = e => {\n    e.preventDefault()\n    const formData = new FormData()\n\n    let email = sessionStorage.getItem('email')\n    formData.append('myImage', this.state.file, email)\n\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }\n    axios\n      .post('/menu', formData, config)\n      .then(response => {\n        let data = { 'email': email }\n        axios.post(`${ROOT_URL}/menuimage`, data).then(response => {\n          console.log('Axios get:', response.data)\n          this.setState({\n            img: 'data:image/png;base64, ' + response.data\n          })\n        })\n\n      })\n      .catch(error => { })\n\n  }\n\n  \n  onSubmit = formValues => {\n    \n    let val = JSON.parse(sessionStorage.getItem('ownerdata'));\n    console.log(val[0]);\n    console.log(val[0].restaurant_name)\n    let a = val[0];\n    let data = {\n      dish_name: formValues.dish_name,\n      description: formValues.description,\n      price: formValues.baseprice,\n      section: formValues.section,\n      restaurant_zipcode: a.restaurant_zipcode,\n      restaurant_name: a.restaurant_name,\n      // img : a.image\n\n    }\n    axios.defaults.withCredentials = true\n    this.props.restaurantmenu(data, res => {\n      if (res.status === 200) {\n        console.log('Inside response', res.data[0])\n        this.setState({\n          authFlag: true\n        })\n\n        this.props.history.push('/ownerrestaurantmenu')\n      } else {\n        alert('Please enter valid credentials')\n      }\n    }) \n  }\n\n  renderError = ({ error, touched }) => {\n    if (touched && error) {\n      return (\n        <div>\n          <label style={{ color: 'red' }}>{error}</label>\n        </div>\n      )\n    }\n  }\n\n  renderInput = ({ input, label, meta }) => {\n    return (\n      <div>\n        <div htmlFor='email' style={{ color: '#6b6b83' }}>\n          {label}\n        </div>\n        <input\n          className='form-control'\n          style={{ marginRight: '10px' }}\n          {...input}\n        />\n        {this.renderError(meta)}\n      </div>\n    )\n  }\n\n  render() {\n    // redirect based on successful login\n    // let redirectVar = null\n    let invalidtag = null\n    // if (!cookie.load('cookie')) {\n    //   redirectVar = <Redirect to='/login' />\n    // }\n\n    let redirectVar = null\n    if (sessionStorage.getItem('JWT' === null)) {\n      redirectVar = <Redirect to='/login' />\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = (\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\n      )\n    }\n    let updatePic = null\n\n    if (this.state.file !== '') {\n      updatePic = (\n        <button\n          style={{ marginLeft: '537px' }}\n          className='btn btn-link'\n          type='submit'\n        >\n          Update\n        </button>\n      )\n    }\n\n    return (\n      <div>\n        {redirectVar}\n\n        <div className='row'>\n          <div className='col-sm-2'>\n            <DisplayOwnerNav />\n          </div>\n\n          <div className='col-sm-10'>\n\n            <div class='login-form'>\n\n              <div class='panel'>\n                <h2>Your account</h2>\n              </div>\n              {/* <div className='row'>\n                <div className='col-sm-6'> */}\n\n\n              <form\n                className='ui form error'\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\n              >\n                <span class='Error' />\n                {updatePic}\n                <ul class='list-group'>\n                  <li class='list-group-item'>\n                    <br />\n                    <h2>Add Items</h2>\n                    <br></br>\n                    <div class='form-group'>\n                      <Field\n                        class='form-control'\n                        name='dish_name'\n                        component={this.renderInput}\n                        label=' Dish Name'\n                      />\n                    </div>\n                    <Field\n                      name='description'\n                      type='text'\n                      component={this.renderInput}\n                      label='Item Description'\n                    />\n                    <div class='form-group'>\n                      <Field\n                        name='section'\n                        component={this.renderInput}\n                        label='Section'\n                      />\n                    </div>\n                    <br />\n                    <div class='form-group'>\n                      <Field\n                        name='baseprice'\n                        type='text'\n                        component={this.renderInput}\n                        label='Price'\n                      />\n                    </div>\n                    <br />\n                    <button type='submit' class='btn btn-primary'>\n                      Add to Menu\n                        </button>\n                    <br />\n                  </li>\n                </ul>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      //   </div>\n      // </div>\n      //       </div>\n    )\n  }\n}\n// export Login Component\n// export default BuyerProfile\n\nconst validate = formValues => {\n  const error = {}\n  if (!formValues.dishname) {\n    error.dishname = 'Enter a valid dish name'\n  }\n  if (!formValues.description) {\n    error.description = 'Enter a valid description'\n  }\n  if (!formValues.baseprice) {\n    error.baseprice = 'Enter a valid baseprice'\n  }\n  if (!formValues.section) {\n    error.section = 'Enter a valid section'\n  }\n  return error\n}\n\nconst mapStateToProps = state => {\n  return { owner: state.owner }\n}\n\nexport default connect(\n  mapStateToProps,\n  { restaurantmenu: restaurantmenu }\n)(\n  reduxForm({\n    form: 'streamMenu',\n    validate: validate\n  })(Menu)\n)\n"]},"metadata":{},"sourceType":"module"}