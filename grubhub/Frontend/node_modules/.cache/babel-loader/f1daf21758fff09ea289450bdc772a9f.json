{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/NavBar.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport '../NavBar.css';\nimport Grubhub from '../Grubhub.png'; //create the Navbar Component\n\nclass NavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleLogout = () => {\n      cookie.remove('cookie', {\n        path: '/'\n      });\n    };\n\n    this.handleLogout = this.handleLogout.bind(this);\n  } //handle logout to destroy the cookie\n\n\n  render() {\n    let navLogin = null;\n\n    if (cookie.load('cookie')) {\n      console.log(\"Able to read cookie\");\n      navLogin = React.createElement(\"nav\", {\n        style: {\n          backgroundColor: \"yellow\"\n        },\n        class: \"navbar navbar-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"navbar-brand\",\n        style: {\n          color: \"red\",\n          fontFamily: \"impact\",\n          fontWeight: \"bold\",\n          fontSize: \"25px\"\n        },\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"GRUBHUB\"), React.createElement(\"ul\", {\n        class: \"nav navbar-nav navbar-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        onClick: this.handleLogout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"glyphicon glyphicon-log-out\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }), \"Logout\"))));\n    } else {\n      //Else display login button\n      console.log(\"Not Able to read cookie\");\n      navLogin = React.createElement(\"nav\", {\n        style: {\n          backgroundColor: \"yellow\"\n        },\n        class: \"navbar navbar-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        class: \"navbar-brand\",\n        style: {\n          color: \"red\",\n          fontFamily: \"impact\",\n          fontWeight: \"bold\",\n          fontSize: \"25px\"\n        },\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"GRUBHUB\"), React.createElement(\"ul\", {\n        class: \"nav navbar-nav navbar-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/ownerlogin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"glyphicon glyphicon-log-in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), \" Owner Login\")), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        class: \"glyphicon glyphicon-log-in\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), \" Login\"))), React.createElement(\"div\", {\n        className: \"overlay\",\n        style: {\n          backgroundImage: \"url(\".concat(Grubhub, \")\"),\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }\n\n    let redirectVar = null;\n\n    if (cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, navLogin);\n  }\n\n}\n\nexport default NavBar;","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/NavBar.js"],"names":["React","Component","Link","cookie","Redirect","Grubhub","NavBar","constructor","props","handleLogout","remove","path","bind","render","navLogin","load","console","log","backgroundColor","color","fontFamily","fontWeight","fontSize","backgroundImage","height","redirectVar"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport '../NavBar.css';\nimport Grubhub from '../Grubhub.png'\n//create the Navbar Component\nclass NavBar extends Component {\n    constructor(props) {\n        super(props);\n        this.handleLogout = this.handleLogout.bind(this);\n    }\n    //handle logout to destroy the cookie\n    handleLogout = () => {\n        cookie.remove('cookie', { path: '/' })\n    }\n\n    render() {\n        let navLogin = null;\n        if(cookie.load('cookie')) {\n            console.log(\"Able to read cookie\");\n            navLogin = (\n                <nav style= {{backgroundColor: \"yellow\"}} class=\"navbar navbar-default\">\n                    <a class=\"navbar-brand\" style={{ color: \"red\", fontFamily: \"impact\", fontWeight: \"bold\", fontSize: \"25px\" }} href=\"/\">GRUBHUB</a>\n\n                    <ul class=\"nav navbar-nav navbar-right\">\n                        {/* <li><Link to=\"/userprofile\" ><span class=\"glyphicon glyphicon-user\"></span>Account</Link></li> */}\n                        <li><Link to=\"/\" onClick={this.handleLogout}><span class=\"glyphicon glyphicon-log-out\"></span>Logout</Link></li>\n\n                    </ul>\n                </nav>\n\n\n            );\n\n        } else {\n            //Else display login button\n            console.log(\"Not Able to read cookie\");\n            navLogin = (\n                <nav style= {{backgroundColor: \"yellow\"}} class=\"navbar navbar-default\">\n\n                    <a class=\"navbar-brand\" style={{ color: \"red\", fontFamily: \"impact\", fontWeight: \"bold\", fontSize: \"25px\" }} href=\"/\">GRUBHUB</a>\n\n                    <ul class=\"nav navbar-nav navbar-right\">\n                    <li><Link to=\"/ownerlogin\"><span class=\"glyphicon glyphicon-log-in\"></span> Owner Login</Link></li>\n                        <li><Link to=\"/login\"><span class=\"glyphicon glyphicon-log-in\"></span> Login</Link></li>\n                    </ul>\n\n                    <div  className='overlay'\nstyle={{ backgroundImage: `url(${Grubhub})` , height: \"100%\"}}>\n    </div>\n                </nav>\n            )\n        }\n        \n        let redirectVar = null;\n        if (cookie.load('cookie')) {\n            redirectVar = <Redirect to=\"/home\" />\n        }\n        return (\n            <div>\n                {navLogin}\n            </div>\n        )\n    }\n}\n\nexport default NavBar;"]},"metadata":{},"sourceType":"module"}