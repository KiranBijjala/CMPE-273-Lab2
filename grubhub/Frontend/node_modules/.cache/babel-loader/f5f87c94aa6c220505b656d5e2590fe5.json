{"ast":null,"code":"import _defineProperty from \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport '../App.css';\nimport './Search.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getRestaurantDetails } from '../actions';\nimport { loginuser } from '../actions';\nimport { getUserImage } from '../actions';\nimport Display from './Display/Display';\nimport { connect } from 'react-redux';\nimport BuyerOwnerNav from './Display/BuyerOwnerNav';\nimport Pagination from \"./Pagination\";\nimport { paginate } from \"../paginate\";\nimport { Field, reduxForm } from 'redux-form'; // Define a Login Component\n\nclass Search extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.pageHandler = offset => {\n      this.setState(({\n        paging\n      }) => ({\n        paging: _objectSpread({}, paging, {\n          offset: offset\n        })\n      }));\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.selectRestaurant = e => {\n      // console.log(e.target.id);\n      let temp = e.target.id; // alert(e.target.id);\n\n      sessionStorage.setItem('selectedRestaurant', temp);\n    };\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.imageChangeHandler = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.state = {\n      file: '',\n      img: '',\n      restaurantimg: '',\n      restaurantnames: '',\n      restaurantdetails: '',\n      authFlag: false,\n      authFailed: false,\n      cuisine: \"\",\n      currentPage: 1\n    };\n  } // Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    sessionStorage.setItem('checkout', \"new\"); // let path = process.env.PUBLIC_URL\n    // let restaurantImgPath = process.env.PUBLIC_URL\n    // path = path + '/profile/Grubhub.png'\n    // restaurantImgPath = restaurantImgPath+'/profile/Sankranthi.png'\n\n    let restaurantImgPath = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Sankranthi.png';\n    let path = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Avatar.png';\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      img: path,\n      restaurantimg: restaurantImgPath,\n      restaurantnames: true,\n      cuisine: \"\"\n    });\n    let restaurants = [];\n\n    if (sessionStorage.getItem('restaurants') != null) {\n      restaurants = sessionStorage.getItem('restaurants');\n    }\n\n    let data = {\n      details: restaurants\n    };\n    axios.defaults.withCredentials = true;\n    this.props.getRestaurantDetails({\n      params: data\n    }, response => {\n      console.log(this.props.user);\n      this.setState({\n        restaurantdetails: this.props.user\n      }, () => {// console.log(this.state.restaurantdetails)\n        // Object.keys(this.state.restaurantdetails).map((restaurant)=>console.log(this.state.restaurantdetails[restaurant].rating))\n      });\n    });\n  }\n\n  render() {\n    // redirect based on successful login\n    let redirectVar = null;\n    let invalidtag = null;\n    let editname = null;\n    let editpassword = null;\n    let editcontact = null;\n    let resturantslist = null;\n    let list = this.state.restaurantdetails;\n    resturantslist = Object.keys(this.state.restaurantdetails).map(restaurant => {\n      return React.createElement(\"a\", {\n        href: \"/restaurantmenu\",\n        id: list[restaurant].restaurant_name,\n        class: \"list-group-item list-group-item-action\",\n        onClick: this.selectRestaurant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Display, {\n        id: list[restaurant].restaurant_name,\n        image: list[restaurant].image,\n        restaurant_name: list[restaurant].restaurant_name,\n        sections: list[restaurant].sections,\n        rating: list[restaurant].rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    });\n    console.log(resturantslist);\n\n    if (!cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, \"*Invalid user name password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        style: {\n          marginLeft: '537px'\n        },\n        className: \"btn btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Update\");\n    }\n\n    const orders = paginate(resturantslist, this.state.currentPage, 2);\n    let filterdProperties = orders.filter(proper => {\n      return console.log(\"Hello\") // proper.headline.toLowerCase().indexOf(this.state.searchlocation.toLowerCase()) !== -1 && \n      //         proper.bedroom.indexOf(this.state.searchbedroom) !== -1 &&\n      //         Number(proper.rate) <= this.state.slidervalue \n      ;\n    });\n    let i = -1;\n    var property1 = filterdProperties.map(property => {\n      i = i + 1;\n      console.log(property1);\n    });\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.restaurant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \" Filter \")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(BuyerOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"Your account\")), React.createElement(\"div\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, resturantslist, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(Pagination, {\n      paging: paging,\n      pageHandler: this.pageHandler,\n      totalPages: totalPages,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getRestaurantDetails: getRestaurantDetails\n})(reduxForm({\n  form: 'streamSearch' // validate: validate\n\n})(Search));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Search.js"],"names":["React","Component","axios","cookie","Redirect","Link","getRestaurantDetails","loginuser","getUserImage","Display","connect","BuyerOwnerNav","Pagination","paginate","Field","reduxForm","Search","constructor","props","pageHandler","offset","setState","paging","handlePageChange","page","currentPage","selectRestaurant","e","temp","target","id","sessionStorage","setItem","inputChangeHandler","name","value","imageChangeHandler","file","files","state","img","restaurantimg","restaurantnames","restaurantdetails","authFlag","authFailed","cuisine","componentWillMount","restaurantImgPath","path","restaurants","getItem","data","details","defaults","withCredentials","params","response","console","log","user","render","redirectVar","invalidtag","editname","editpassword","editcontact","resturantslist","list","Object","keys","map","restaurant","restaurant_name","image","sections","rating","load","color","updatePic","marginLeft","orders","filterdProperties","filter","proper","i","property1","property","totalPages","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport './Search.css'\r\nimport axios from 'axios'\r\nimport cookie from 'react-cookies'\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { getRestaurantDetails } from '../actions'\r\nimport { loginuser } from '../actions'\r\nimport { getUserImage } from '../actions'\r\nimport Display from './Display/Display'\r\nimport { connect } from 'react-redux'\r\nimport BuyerOwnerNav from './Display/BuyerOwnerNav'\r\nimport Pagination from \"./Pagination\";\r\nimport { paginate } from \"../paginate\";\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\n\r\n// Define a Login Component\r\nclass Search extends Component {\r\n  // call the constructor method\r\n  constructor(props) {\r\n    // Call the constrictor of Super class i.e The Component\r\n    super(props)\r\n    // maintain the state required for this component\r\n    this.state = {\r\n      file: '',\r\n      img: '',\r\n      restaurantimg: '',\r\n      restaurantnames: '',\r\n      restaurantdetails: '',\r\n      authFlag: false,\r\n      authFailed: false,\r\n      cuisine: \"\",\r\n      currentPage: 1,\r\n    }\r\n\r\n  }\r\n  // Call the Will Mount to set the auth Flag to false\r\n  componentWillMount() {\r\n    sessionStorage.setItem('checkout', \"new\")\r\n\r\n    // let path = process.env.PUBLIC_URL\r\n    // let restaurantImgPath = process.env.PUBLIC_URL\r\n    // path = path + '/profile/Grubhub.png'\r\n    // restaurantImgPath = restaurantImgPath+'/profile/Sankranthi.png'\r\n    let restaurantImgPath = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Sankranthi.png';\r\n    let path = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Avatar.png';\r\n    this.setState({\r\n      authFlag: false,\r\n      authFailed: false,\r\n      img: path,\r\n      restaurantimg: restaurantImgPath,\r\n      restaurantnames: true,\r\n      cuisine: \"\"\r\n    })\r\n\r\n    let restaurants = []\r\n    if (sessionStorage.getItem('restaurants') != null) {\r\n      restaurants = sessionStorage.getItem('restaurants');\r\n    }\r\n\r\n    let data = {\r\n      details: restaurants\r\n    }\r\n    axios.defaults.withCredentials = true\r\n\r\n    this.props.getRestaurantDetails({ params: data }, (response) => {\r\n      console.log(this.props.user)\r\n      this.setState({\r\n        restaurantdetails: this.props.user\r\n      }, () => {\r\n        // console.log(this.state.restaurantdetails)\r\n        // Object.keys(this.state.restaurantdetails).map((restaurant)=>console.log(this.state.restaurantdetails[restaurant].rating))\r\n\r\n      })\r\n\r\n    });\r\n\r\n\r\n  }\r\n  pageHandler = (offset) =>{\r\n    this.setState(({ paging }) => ({\r\n      paging: { ...paging, offset: offset }\r\n    }));\r\n }\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  }\r\n\r\n  selectRestaurant = (e) => {\r\n    // console.log(e.target.id);\r\n    let temp = e.target.id;\r\n    // alert(e.target.id);\r\n    sessionStorage.setItem('selectedRestaurant', temp)\r\n  }\r\n\r\n  inputChangeHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  imageChangeHandler = e => {\r\n    this.setState({\r\n      file: e.target.files[0]\r\n    })\r\n  }\r\n\r\n\r\n  render() {\r\n    // redirect based on successful login\r\n    let redirectVar = null\r\n    let invalidtag = null\r\n    let editname = null\r\n    let editpassword = null\r\n    let editcontact = null\r\n    let resturantslist = null\r\n    let list = this.state.restaurantdetails;\r\n\r\n    resturantslist = Object.keys(this.state.restaurantdetails).map((restaurant) => {\r\n\r\n\r\n      return (<a href=\"/restaurantmenu\" id={list[restaurant].restaurant_name} class=\"list-group-item list-group-item-action\" onClick={this.selectRestaurant}>\r\n        <Display id={list[restaurant].restaurant_name} image={list[restaurant].image} restaurant_name={list[restaurant].restaurant_name} sections={list[restaurant].sections} rating={list[restaurant].rating} />\r\n      </a>\r\n      )\r\n    });\r\n    console.log(resturantslist)\r\n    if (!cookie.load('cookie')) {\r\n      redirectVar = <Redirect to='/login' />\r\n    }\r\n\r\n    if (this.state.authFailed) {\r\n      invalidtag = (\r\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\r\n      )\r\n    }\r\n    let updatePic = null\r\n\r\n    if (this.state.file !== '') {\r\n      updatePic = (\r\n        <button\r\n          style={{ marginLeft: '537px' }}\r\n          className='btn btn-link'\r\n          type='submit'\r\n        >\r\n          Update\r\n        </button>\r\n      )\r\n    }\r\n\r\n    const orders = paginate(resturantslist, this.state.currentPage, 2)\r\n    let filterdProperties = orders.filter(\r\n      (proper) => {\r\n        return (\r\n          console.log(\"Hello\")\r\n          // proper.headline.toLowerCase().indexOf(this.state.searchlocation.toLowerCase()) !== -1 && \r\n          //         proper.bedroom.indexOf(this.state.searchbedroom) !== -1 &&\r\n          //         Number(proper.rate) <= this.state.slidervalue \r\n        )\r\n      });\r\n\r\n    let i = -1;\r\n    var property1 = filterdProperties.map((property) => {\r\n      i = i + 1;\r\n      console.log(property1)\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        {redirectVar}\r\n        <div><button onClick={this.restaurant}> Filter </button></div>\r\n        <div className='row'>\r\n          <div className='col-sm-2'>\r\n            <BuyerOwnerNav />\r\n          </div>\r\n\r\n          <div className='col-sm-10'>\r\n            <div class='container'>\r\n\r\n              <div class='login-form'>\r\n                {/* <div class='main-div'> */}\r\n                <div class='panel'>\r\n                  <h2>Your account</h2>\r\n                  {/* {invalidtag} */}\r\n                </div>\r\n                <div class=\"list-group\">\r\n                  {resturantslist}\r\n                  <br></br>\r\n                  <Pagination\r\n          paging = {paging}\r\n          pageHandler = {this.pageHandler}\r\n          totalPages = {totalPages}>\r\n          </Pagination>\r\n                </div>\r\n                <br />\r\n                <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRestaurantDetails: getRestaurantDetails }\r\n)(\r\n  reduxForm({\r\n    form: 'streamSearch'\r\n    // validate: validate\r\n  })(Search)\r\n)"]},"metadata":{},"sourceType":"module"}