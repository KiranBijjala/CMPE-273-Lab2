{"ast":null,"code":"var _jsxFileName = \"/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Search.js\";\nimport React, { Component } from 'react';\nimport '../App.css';\nimport './Search.css';\nimport axios from 'axios';\nimport cookie from 'react-cookies';\nimport { Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { getRestaurantDetails } from '../actions';\nimport { loginuser } from '../actions';\nimport { getUserImage } from '../actions';\nimport Display from './Display/Display';\nimport { connect } from 'react-redux';\nimport BuyerOwnerNav from './Display/BuyerOwnerNav';\nimport Pagination from \"./Pagination\";\nimport { Field, reduxForm } from 'redux-form'; // Define a Login Component\n\nclass Search extends Component {\n  // call the constructor method\n  constructor(props) {\n    // Call the constrictor of Super class i.e The Component\n    super(props); // maintain the state required for this component\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.selectRestaurant = e => {\n      // console.log(e.target.id);\n      let temp = e.target.id; // alert(e.target.id);\n\n      sessionStorage.setItem('selectedRestaurant', temp);\n    };\n\n    this.inputChangeHandler = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.imageChangeHandler = e => {\n      this.setState({\n        file: e.target.files[0]\n      });\n    };\n\n    this.state = {\n      file: '',\n      img: '',\n      restaurantimg: '',\n      restaurantnames: '',\n      restaurantdetails: '',\n      authFlag: false,\n      authFailed: false,\n      cuisine: \"\",\n      currentPage: 1\n    };\n  } // Call the Will Mount to set the auth Flag to false\n\n\n  componentWillMount() {\n    sessionStorage.setItem('checkout', \"new\"); // let path = process.env.PUBLIC_URL\n    // let restaurantImgPath = process.env.PUBLIC_URL\n    // path = path + '/profile/Grubhub.png'\n    // restaurantImgPath = restaurantImgPath+'/profile/Sankranthi.png'\n\n    let restaurantImgPath = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Sankranthi.png';\n    let path = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Avatar.png';\n    this.setState({\n      authFlag: false,\n      authFailed: false,\n      img: path,\n      restaurantimg: restaurantImgPath,\n      restaurantnames: true,\n      cuisine: \"\"\n    });\n    let restaurants = [];\n\n    if (sessionStorage.getItem('restaurants') != null) {\n      restaurants = sessionStorage.getItem('restaurants');\n    }\n\n    let data = {\n      details: restaurants\n    };\n    axios.defaults.withCredentials = true;\n    this.props.getRestaurantDetails({\n      params: data\n    }, response => {\n      console.log(this.props.user);\n      this.setState({\n        restaurantdetails: this.props.user\n      }, () => {// console.log(this.state.restaurantdetails)\n        // Object.keys(this.state.restaurantdetails).map((restaurant)=>console.log(this.state.restaurantdetails[restaurant].rating))\n      });\n    });\n  }\n\n  render() {\n    // redirect based on successful login\n    let redirectVar = null;\n    let invalidtag = null;\n    let editname = null;\n    let editpassword = null;\n    let editcontact = null;\n    let resturantslist = null;\n    let list = this.state.restaurantdetails;\n    resturantslist = Object.keys(this.state.restaurantdetails).map(restaurant => {\n      return React.createElement(\"a\", {\n        href: \"/restaurantmenu\",\n        id: list[restaurant].restaurant_name,\n        class: \"list-group-item list-group-item-action\",\n        onClick: this.selectRestaurant,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Display, {\n        id: list[restaurant].restaurant_name,\n        image: list[restaurant].image,\n        restaurant_name: list[restaurant].restaurant_name,\n        sections: list[restaurant].sections,\n        rating: list[restaurant].rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }));\n    });\n    console.log(resturantslist);\n\n    if (!cookie.load('cookie')) {\n      redirectVar = React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.authFailed) {\n      invalidtag = React.createElement(\"label\", {\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"*Invalid user name password!\");\n    }\n\n    let updatePic = null;\n\n    if (this.state.file !== '') {\n      updatePic = React.createElement(\"button\", {\n        style: {\n          marginLeft: '537px'\n        },\n        className: \"btn btn-link\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Update\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, redirectVar, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.restaurant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \" Filter \")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(BuyerOwnerNav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-sm-10\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"login-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"panel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Your account\")), React.createElement(\"div\", {\n      class: \"list-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, resturantslist), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    })))), React.createElement(Pagination, {\n      style: {\n        float: \"right\"\n      },\n      pageSize: 2,\n      itemsCount: resturantslist.length,\n      currentPage: this.state.currentPage,\n      onPageChange: this.handlePageChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    })));\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n}\n\nexport default connect(mapStateToProps, {\n  getRestaurantDetails: getRestaurantDetails\n})(reduxForm({\n  form: 'streamSearch' // validate: validate\n\n})(Search));","map":{"version":3,"sources":["/Users/kirankumarbijjala/Documents/Lab2/grubhub/Frontend/src/components/Search.js"],"names":["React","Component","axios","cookie","Redirect","Link","getRestaurantDetails","loginuser","getUserImage","Display","connect","BuyerOwnerNav","Pagination","Field","reduxForm","Search","constructor","props","handlePageChange","page","setState","currentPage","selectRestaurant","e","temp","target","id","sessionStorage","setItem","inputChangeHandler","name","value","imageChangeHandler","file","files","state","img","restaurantimg","restaurantnames","restaurantdetails","authFlag","authFailed","cuisine","componentWillMount","restaurantImgPath","path","restaurants","getItem","data","details","defaults","withCredentials","params","response","console","log","user","render","redirectVar","invalidtag","editname","editpassword","editcontact","resturantslist","list","Object","keys","map","restaurant","restaurant_name","image","sections","rating","load","color","updatePic","marginLeft","float","length","mapStateToProps","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport '../App.css'\r\nimport './Search.css'\r\nimport axios from 'axios'\r\nimport cookie from 'react-cookies'\r\nimport { Redirect } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport {getRestaurantDetails} from '../actions'\r\nimport {loginuser} from '../actions'\r\nimport {getUserImage} from '../actions'\r\nimport Display from './Display/Display'\r\nimport { connect } from 'react-redux'\r\nimport BuyerOwnerNav  from './Display/BuyerOwnerNav'\r\nimport Pagination from \"./Pagination\";\r\nimport {Field, reduxForm} from 'redux-form';\r\n\r\n\r\n// Define a Login Component\r\nclass Search extends Component {\r\n  // call the constructor method\r\n  constructor (props) {\r\n    // Call the constrictor of Super class i.e The Component\r\n    super(props)\r\n    // maintain the state required for this component\r\n    this.state = {\r\n      file: '',\r\n      img: '',\r\n      restaurantimg:'',\r\n      restaurantnames:'',\r\n      restaurantdetails:'',\r\n      authFlag: false,\r\n      authFailed: false,\r\n      cuisine:\"\",\r\n      currentPage : 1,\r\n    }\r\n   \r\n  }\r\n  // Call the Will Mount to set the auth Flag to false\r\n  componentWillMount () {\r\n    sessionStorage.setItem('checkout', \"new\") \r\n    \r\n    // let path = process.env.PUBLIC_URL\r\n    // let restaurantImgPath = process.env.PUBLIC_URL\r\n    // path = path + '/profile/Grubhub.png'\r\n    // restaurantImgPath = restaurantImgPath+'/profile/Sankranthi.png'\r\n    let restaurantImgPath = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Sankranthi.png';\r\n    let path = '/Users/kirankumarbijjala/Documents/Lab2/grubhub/Backend/profile/Avatar.png';\r\n    this.setState({\r\n      authFlag: false,\r\n      authFailed: false,\r\n      img: path,\r\n      restaurantimg: restaurantImgPath,\r\n      restaurantnames: true,\r\n      cuisine:\"\"\r\n    })\r\n\r\n    let restaurants=[]\r\n    if(sessionStorage.getItem('restaurants')!=null){\r\n      restaurants = sessionStorage.getItem('restaurants');\r\n    }\r\n\r\n    let data = {\r\n      details: restaurants     \r\n    }\r\n    axios.defaults.withCredentials = true\r\n\r\n    this.props.getRestaurantDetails({ params: data }, (response)=>{\r\n      console.log( this.props.user)\r\n      this.setState({\r\n        restaurantdetails: this.props.user\r\n      }, ()=>{\r\n        // console.log(this.state.restaurantdetails)\r\n        // Object.keys(this.state.restaurantdetails).map((restaurant)=>console.log(this.state.restaurantdetails[restaurant].rating))\r\n        \r\n      })\r\n\r\n    });\r\n\r\n\r\n  }\r\n\r\n  handlePageChange= page =>{\r\n    this.setState({currentPage : page });\r\n  }\r\n\r\n  selectRestaurant = (e)=>{\r\n    // console.log(e.target.id);\r\n    let temp= e.target.id;\r\n    // alert(e.target.id);\r\n    sessionStorage.setItem('selectedRestaurant', temp)\r\n  }\r\n  \r\n  inputChangeHandler = e => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    })\r\n  }\r\n\r\n  imageChangeHandler = e => {\r\n      this.setState({\r\n      file: e.target.files[0]\r\n    })\r\n  }\r\n\r\n  \r\n  render () {\r\n    // redirect based on successful login\r\n    let redirectVar = null\r\n    let invalidtag = null\r\n    let editname = null\r\n    let editpassword = null\r\n    let editcontact = null\r\n    let resturantslist=null\r\n    let list=this.state.restaurantdetails;\r\n\r\n    resturantslist = Object.keys(this.state.restaurantdetails).map((restaurant)=>{\r\n\r\n        \r\n        return( <a href=\"/restaurantmenu\" id={list[restaurant].restaurant_name} class=\"list-group-item list-group-item-action\" onClick={this.selectRestaurant}>\r\n              <Display id={list[restaurant].restaurant_name} image={list[restaurant].image}  restaurant_name={list[restaurant].restaurant_name} sections={list[restaurant].sections} rating={list[restaurant].rating}/>\r\n          </a>\r\n         )        \r\n    });\r\n    console.log(resturantslist)\r\n    if (!cookie.load('cookie')) {\r\n      redirectVar = <Redirect to='/login' />\r\n    }\r\n\r\n    if (this.state.authFailed) {\r\n      invalidtag = (\r\n        <label style={{ color: 'red' }}>*Invalid user name password!</label>\r\n      )\r\n    }\r\n    let updatePic = null\r\n\r\n    if (this.state.file !== '') {\r\n      updatePic = (\r\n        <button\r\n          style={{ marginLeft: '537px' }}\r\n          className='btn btn-link'\r\n          type='submit'\r\n        >\r\n          Update\r\n        </button>\r\n      )\r\n    }\r\n    return (\r\n      <div>\r\n        {redirectVar}\r\n        <div><button onClick={this.restaurant}> Filter </button></div>\r\n        <div className='row'>\r\n          <div className='col-sm-2'>\r\n            <BuyerOwnerNav />\r\n          </div>\r\n\r\n          <div className='col-sm-10'>\r\n            <div class='container'>\r\n            \r\n              <div class='login-form'>\r\n                {/* <div class='main-div'> */}\r\n                <div class='panel'>\r\n                  <h2>Your account</h2>\r\n                  {/* {invalidtag} */}\r\n                </div>\r\n                  <div class=\"list-group\">\r\n                        {resturantslist}\r\n                  </div>\r\n                <br />  \r\n               <br />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <Pagination style ={{float : \"right\"}}\r\n         pageSize={2}\r\n         itemsCount = {resturantslist.length}\r\n         currentPage = {this.state.currentPage}\r\n        onPageChange = {this.handlePageChange}/>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    user: state.user\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getRestaurantDetails:getRestaurantDetails }\r\n)(\r\n  reduxForm({\r\n    form: 'streamSearch'\r\n    // validate: validate\r\n  })(Search)\r\n)"]},"metadata":{},"sourceType":"module"}